{"version":3,"sources":["jquery.validate.js","strlen.js","array_diff.js","strtotime.js","is_numeric.js","php-date-formatter.js","jsvalidation.js","helpers.js","timezones.js","validations.js"],"names":[],"mappingsr3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChxvhefile":"jsvalidation.js","sourcesContent":["/*!\n * jQuery Validation Plugin v1.14.0\n *\n * http://jqueryvalidation.org/\n *\n * Copyright (c) 2015 Jörn Zaefferer\n * Released under the MIT license\n */\n(function( factory ) {\n\tif ( typeof define === \"function\" && define.amd ) {\n\t\tdefine( [\"jquery\"], factory );\n\t} else {\n\t\tfactory( jQuery );\n\t}\n}(function( $ ) {\n\n$.extend($.fn, {\n\t// http://jqueryvalidation.org/validate/\n\tvalidate: function( options ) {\n\n\t\t// if nothing is selected, return nothing; can't chain anyway\n\t\tif ( !this.length ) {\n\t\t\tif ( options && options.debug && window.console ) {\n\t\t\t\tconsole.warn( \"Nothing selected, can't validate, returning nothing.\" );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// check if a validator for this form was already created\n\t\tvar validator = $.data( this[ 0 ], \"validator\" );\n\t\tif ( validator ) {\n\t\t\treturn validator;\n\t\t}\n\n\t\t// Add novalidate tag if HTML5.\n\t\tthis.attr( \"novalidate\", \"novalidate\" );\n\n\t\tvalidator = new $.validator( options, this[ 0 ] );\n\t\t$.data( this[ 0 ], \"validator\", validator );\n\n\t\tif ( validator.settings.onsubmit ) {\n\n\t\t\tthis.on( \"click.validate\", \":submit\", function( event ) {\n\t\t\t\tif ( validator.settings.submitHandler ) {\n\t\t\t\t\tvalidator.submitButton = event.target;\n\t\t\t\t}\n\n\t\t\t\t// allow suppressing validation by adding a cancel class to the submit button\n\t\t\t\tif ( $( this ).hasClass( \"cancel\" ) ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\n\t\t\t\t// allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\n\t\t\t\tif ( $( this ).attr( \"formnovalidate\" ) !== undefined ) {\n\t\t\t\t\tvalidator.cancelSubmit = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// validate the form on submit\n\t\t\tthis.on( \"submit.validate\", function( event ) {\n\t\t\t\tif ( validator.settings.debug ) {\n\t\t\t\t\t// prevent form submit to be able to see console output\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t\tfunction handle() {\n\t\t\t\t\tvar hidden, result;\n\t\t\t\t\tif ( validator.settings.submitHandler ) {\n\t\t\t\t\t\tif ( validator.submitButton ) {\n\t\t\t\t\t\t\t// insert a hidden input as a replacement for the missing submit button\n\t\t\t\t\t\t\thidden = $( \"<input type='hidden'/>\" )\n\t\t\t\t\t\t\t\t.attr( \"name\", validator.submitButton.name )\n\t\t\t\t\t\t\t\t.val( $( validator.submitButton ).val() )\n\t\t\t\t\t\t\t\t.appendTo( validator.currentForm );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresult = validator.settings.submitHandler.call( validator, validator.currentForm, event );\n\t\t\t\t\t\tif ( validator.submitButton ) {\n\t\t\t\t\t\t\t// and clean up afterwards; thanks to no-block-scope, hidden can be referenced\n\t\t\t\t\t\t\thidden.remove();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( result !== undefined ) {\n\t\t\t\t\t\t\treturn result;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// prevent submit for invalid forms or custom submit handlers\n\t\t\t\tif ( validator.cancelSubmit ) {\n\t\t\t\t\tvalidator.cancelSubmit = false;\n\t\t\t\t\treturn handle();\n\t\t\t\t}\n\t\t\t\tif ( validator.form() ) {\n\t\t\t\t\tif ( validator.pendingRequest ) {\n\t\t\t\t\t\tvalidator.formSubmitted = true;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn handle();\n\t\t\t\t} else {\n\t\t\t\t\tvalidator.focusInvalid();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn validator;\n\t},\n\t// http://jqueryvalidation.org/valid/\n\tvalid: function() {\n\t\tvar valid, validator, errorList;\n\n\t\tif ( $( this[ 0 ] ).is( \"form\" ) ) {\n\t\t\tvalid = this.validate().form();\n\t\t} else {\n\t\t\terrorList = [];\n\t\t\tvalid = true;\n\t\t\tvalidator = $( this[ 0 ].form ).validate();\n\t\t\tthis.each( function() {\n\t\t\t\tvalid = validator.element( this ) && valid;\n\t\t\t\terrorList = errorList.concat( validator.errorList );\n\t\t\t});\n\t\t\tvalidator.errorList = errorList;\n\t\t}\n\t\treturn valid;\n\t},\n\n\t// http://jqueryvalidation.org/rules/\n\trules: function( command, argument ) {\n\t\tvar element = this[ 0 ],\n\t\t\tsettings, staticRules, existingRules, data, param, filtered;\n\n\t\tif ( command ) {\n\t\t\tsettings = $.data( element.form, \"validator\" ).settings;\n\t\t\tstaticRules = settings.rules;\n\t\t\texistingRules = $.validator.staticRules( element );\n\t\t\tswitch ( command ) {\n\t\t\tcase \"add\":\n\t\t\t\t$.extend( existingRules, $.validator.normalizeRule( argument ) );\n\t\t\t\t// remove messages from rules, but allow them to be set separately\n\t\t\t\tdelete existingRules.messages;\n\t\t\t\tstaticRules[ element.name ] = existingRules;\n\t\t\t\tif ( argument.messages ) {\n\t\t\t\t\tsettings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"remove\":\n\t\t\t\tif ( !argument ) {\n\t\t\t\t\tdelete staticRules[ element.name ];\n\t\t\t\t\treturn existingRules;\n\t\t\t\t}\n\t\t\t\tfiltered = {};\n\t\t\t\t$.each( argument.split( /\\s/ ), function( index, method ) {\n\t\t\t\t\tfiltered[ method ] = existingRules[ method ];\n\t\t\t\t\tdelete existingRules[ method ];\n\t\t\t\t\tif ( method === \"required\" ) {\n\t\t\t\t\t\t$( element ).removeAttr( \"aria-required\" );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn filtered;\n\t\t\t}\n\t\t}\n\n\t\tdata = $.validator.normalizeRules(\n\t\t$.extend(\n\t\t\t{},\n\t\t\t$.validator.classRules( element ),\n\t\t\t$.validator.attributeRules( element ),\n\t\t\t$.validator.dataRules( element ),\n\t\t\t$.validator.staticRules( element )\n\t\t), element );\n\n\t\t// make sure required is at front\n\t\tif ( data.required ) {\n\t\t\tparam = data.required;\n\t\t\tdelete data.required;\n\t\t\tdata = $.extend( { required: param }, data );\n\t\t\t$( element ).attr( \"aria-required\", \"true\" );\n\t\t}\n\n\t\t// make sure remote is at back\n\t\tif ( data.remote ) {\n\t\t\tparam = data.remote;\n\t\t\tdelete data.remote;\n\t\t\tdata = $.extend( data, { remote: param });\n\t\t}\n\n\t\treturn data;\n\t}\n});\n\n// Custom selectors\n$.extend( $.expr[ \":\" ], {\n\t// http://jqueryvalidation.org/blank-selector/\n\tblank: function( a ) {\n\t\treturn !$.trim( \"\" + $( a ).val() );\n\t},\n\t// http://jqueryvalidation.org/filled-selector/\n\tfilled: function( a ) {\n\t\treturn !!$.trim( \"\" + $( a ).val() );\n\t},\n\t// http://jqueryvalidation.org/unchecked-selector/\n\tunchecked: function( a ) {\n\t\treturn !$( a ).prop( \"checked\" );\n\t}\n});\n\n// constructor for validator\n$.validator = function( options, form ) {\n\tthis.settings = $.extend( true, {}, $.validator.defaults, options );\n\tthis.currentForm = form;\n\tthis.init();\n};\n\n// http://jqueryvalidation.org/jQuery.validator.format/\n$.validator.format = function( source, params ) {\n\tif ( arguments.length === 1 ) {\n\t\treturn function() {\n\t\t\tvar args = $.makeArray( arguments );\n\t\t\targs.unshift( source );\n\t\t\treturn $.validator.format.apply( this, args );\n\t\t};\n\t}\n\tif ( arguments.length > 2 && params.constructor !== Array  ) {\n\t\tparams = $.makeArray( arguments ).slice( 1 );\n\t}\n\tif ( params.constructor !== Array ) {\n\t\tparams = [ params ];\n\t}\n\t$.each( params, function( i, n ) {\n\t\tsource = source.replace( new RegExp( \"\\\\{\" + i + \"\\\\}\", \"g\" ), function() {\n\t\t\treturn n;\n\t\t});\n\t});\n\treturn source;\n};\n\n$.extend( $.validator, {\n\n\tdefaults: {\n\t\tmessages: {},\n\t\tgroups: {},\n\t\trules: {},\n\t\terrorClass: \"error\",\n\t\tvalidClass: \"valid\",\n\t\terrorElement: \"label\",\n\t\tfocusCleanup: false,\n\t\tfocusInvalid: true,\n\t\terrorContainer: $( [] ),\n\t\terrorLabelContainer: $( [] ),\n\t\tonsubmit: true,\n\t\tignore: \":hidden\",\n\t\tignoreTitle: false,\n\t\tonfocusin: function( element ) {\n\t\t\tthis.lastActive = element;\n\n\t\t\t// Hide error label and remove error class on focus if enabled\n\t\t\tif ( this.settings.focusCleanup ) {\n\t\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.hideThese( this.errorsFor( element ) );\n\t\t\t}\n\t\t},\n\t\tonfocusout: function( element ) {\n\t\t\tif ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonkeyup: function( element, event ) {\n\t\t\t// Avoid revalidate the field when pressing one of the following keys\n\t\t\t// Shift       => 16\n\t\t\t// Ctrl        => 17\n\t\t\t// Alt         => 18\n\t\t\t// Caps lock   => 20\n\t\t\t// End         => 35\n\t\t\t// Home        => 36\n\t\t\t// Left arrow  => 37\n\t\t\t// Up arrow    => 38\n\t\t\t// Right arrow => 39\n\t\t\t// Down arrow  => 40\n\t\t\t// Insert      => 45\n\t\t\t// Num lock    => 144\n\t\t\t// AltGr key   => 225\n\t\t\tvar excludedKeys = [\n\t\t\t\t16, 17, 18, 20, 35, 36, 37,\n\t\t\t\t38, 39, 40, 45, 144, 225\n\t\t\t];\n\n\t\t\tif ( event.which === 9 && this.elementValue( element ) === \"\" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {\n\t\t\t\treturn;\n\t\t\t} else if ( element.name in this.submitted || element === this.lastElement ) {\n\t\t\t\tthis.element( element );\n\t\t\t}\n\t\t},\n\t\tonclick: function( element ) {\n\t\t\t// click on selects, radiobuttons and checkboxes\n\t\t\tif ( element.name in this.submitted ) {\n\t\t\t\tthis.element( element );\n\n\t\t\t// or option elements, check parent select in that case\n\t\t\t} else if ( element.parentNode.name in this.submitted ) {\n\t\t\t\tthis.element( element.parentNode );\n\t\t\t}\n\t\t},\n\t\thighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).addClass( errorClass ).removeClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).addClass( errorClass ).removeClass( validClass );\n\t\t\t}\n\t\t},\n\t\tunhighlight: function( element, errorClass, validClass ) {\n\t\t\tif ( element.type === \"radio\" ) {\n\t\t\t\tthis.findByName( element.name ).removeClass( errorClass ).addClass( validClass );\n\t\t\t} else {\n\t\t\t\t$( element ).removeClass( errorClass ).addClass( validClass );\n\t\t\t}\n\t\t}\n\t},\n\n\t// http://jqueryvalidation.org/jQuery.validator.setDefaults/\n\tsetDefaults: function( settings ) {\n\t\t$.extend( $.validator.defaults, settings );\n\t},\n\n\tmessages: {\n\t\trequired: \"This field is required.\",\n\t\tremote: \"Please fix this field.\",\n\t\temail: \"Please enter a valid email address.\",\n\t\turl: \"Please enter a valid URL.\",\n\t\tdate: \"Please enter a valid date.\",\n\t\tdateISO: \"Please enter a valid date ( ISO ).\",\n\t\tnumber: \"Please enter a valid number.\",\n\t\tdigits: \"Please enter only digits.\",\n\t\tcreditcard: \"Please enter a valid credit card number.\",\n\t\tequalTo: \"Please enter the same value again.\",\n\t\tmaxlength: $.validator.format( \"Please enter no more than {0} characters.\" ),\n\t\tminlength: $.validator.format( \"Please enter at least {0} characters.\" ),\n\t\trangelength: $.validator.format( \"Please enter a value between {0} and {1} characters long.\" ),\n\t\trange: $.validator.format( \"Please enter a value between {0} and {1}.\" ),\n\t\tmax: $.validator.format( \"Please enter a value less than or equal to {0}.\" ),\n\t\tmin: $.validator.format( \"Please enter a value greater than or equal to {0}.\" )\n\t},\n\n\tautoCreateRanges: false,\n\n\tprototype: {\n\n\t\tinit: function() {\n\t\t\tthis.labelContainer = $( this.settings.errorLabelContainer );\n\t\t\tthis.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );\n\t\t\tthis.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );\n\t\t\tthis.submitted = {};\n\t\t\tthis.valueCache = {};\n\t\t\tthis.pendingRequest = 0;\n\t\t\tthis.pending = {};\n\t\t\tthis.invalid = {};\n\t\t\tthis.reset();\n\n\t\t\tvar groups = ( this.groups = {} ),\n\t\t\t\trules;\n\t\t\t$.each( this.settings.groups, function( key, value ) {\n\t\t\t\tif ( typeof value === \"string\" ) {\n\t\t\t\t\tvalue = value.split( /\\s/ );\n\t\t\t\t}\n\t\t\t\t$.each( value, function( index, name ) {\n\t\t\t\t\tgroups[ name ] = key;\n\t\t\t\t});\n\t\t\t});\n\t\t\trules = this.settings.rules;\n\t\t\t$.each( rules, function( key, value ) {\n\t\t\t\trules[ key ] = $.validator.normalizeRule( value );\n\t\t\t});\n\n\t\t\tfunction delegate( event ) {\n\t\t\t\tvar validator = $.data( this.form, \"validator\" ),\n\t\t\t\t\teventType = \"on\" + event.type.replace( /^validate/, \"\" ),\n\t\t\t\t\tsettings = validator.settings;\n\t\t\t\tif ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {\n\t\t\t\t\tsettings[ eventType ].call( validator, this, event );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.on( \"focusin.validate focusout.validate keyup.validate\",\n\t\t\t\t\t\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], \" +\n\t\t\t\t\t\"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], \" +\n\t\t\t\t\t\"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], \" +\n\t\t\t\t\t\"[type='radio'], [type='checkbox']\", delegate)\n\t\t\t\t// Support: Chrome, oldIE\n\t\t\t\t// \"select\" is provided as event.target when clicking a option\n\t\t\t\t.on(\"click.validate\", \"select, option, [type='radio'], [type='checkbox']\", delegate);\n\n\t\t\tif ( this.settings.invalidHandler ) {\n\t\t\t\t$( this.currentForm ).on( \"invalid-form.validate\", this.settings.invalidHandler );\n\t\t\t}\n\n\t\t\t// Add aria-required to any Static/Data/Class required fields before first validation\n\t\t\t// Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html\n\t\t\t$( this.currentForm ).find( \"[required], [data-rule-required], .required\" ).attr( \"aria-required\", \"true\" );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.form/\n\t\tform: function() {\n\t\t\tthis.checkForm();\n\t\t\t$.extend( this.submitted, this.errorMap );\n\t\t\tthis.invalid = $.extend({}, this.errorMap );\n\t\t\tif ( !this.valid() ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ]);\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn this.valid();\n\t\t},\n\n\t\tcheckForm: function() {\n\t\t\tthis.prepareForm();\n\t\t\tfor ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {\n\t\t\t\tthis.check( elements[ i ] );\n\t\t\t}\n\t\t\treturn this.valid();\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.element/\n\t\telement: function( element ) {\n\t\t\tvar cleanElement = this.clean( element ),\n\t\t\t\tcheckElement = this.validationTargetFor( cleanElement ),\n\t\t\t\tresult = true;\n\n\t\t\tthis.lastElement = checkElement;\n\n\t\t\tif ( checkElement === undefined ) {\n\t\t\t\tdelete this.invalid[ cleanElement.name ];\n\t\t\t} else {\n\t\t\t\tthis.prepareElement( checkElement );\n\t\t\t\tthis.currentElements = $( checkElement );\n\n\t\t\t\tresult = this.check( checkElement ) !== false;\n\t\t\t\tif ( result ) {\n\t\t\t\t\tdelete this.invalid[ checkElement.name ];\n\t\t\t\t} else {\n\t\t\t\t\tthis.invalid[ checkElement.name ] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Add aria-invalid status for screen readers\n\t\t\t$( element ).attr( \"aria-invalid\", !result );\n\n\t\t\tif ( !this.numberOfInvalids() ) {\n\t\t\t\t// Hide error containers on last error\n\t\t\t\tthis.toHide = this.toHide.add( this.containers );\n\t\t\t}\n\t\t\tthis.showErrors();\n\t\t\treturn result;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.showErrors/\n\t\tshowErrors: function( errors ) {\n\t\t\tif ( errors ) {\n\t\t\t\t// add items to error list and map\n\t\t\t\t$.extend( this.errorMap, errors );\n\t\t\t\tthis.errorList = [];\n\t\t\t\tfor ( var name in errors ) {\n\t\t\t\t\tthis.errorList.push({\n\t\t\t\t\t\tmessage: errors[ name ],\n\t\t\t\t\t\telement: this.findByName( name )[ 0 ]\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// remove items from success list\n\t\t\t\tthis.successList = $.grep( this.successList, function( element ) {\n\t\t\t\t\treturn !( element.name in errors );\n\t\t\t\t});\n\t\t\t}\n\t\t\tif ( this.settings.showErrors ) {\n\t\t\t\tthis.settings.showErrors.call( this, this.errorMap, this.errorList );\n\t\t\t} else {\n\t\t\t\tthis.defaultShowErrors();\n\t\t\t}\n\t\t},\n\n\t\t// http://jqueryvalidation.org/Validator.resetForm/\n\t\tresetForm: function() {\n\t\t\tif ( $.fn.resetForm ) {\n\t\t\t\t$( this.currentForm ).resetForm();\n\t\t\t}\n\t\t\tthis.submitted = {};\n\t\t\tthis.lastElement = null;\n\t\t\tthis.prepareForm();\n\t\t\tthis.hideErrors();\n\t\t\tvar i, elements = this.elements()\n\t\t\t\t.removeData( \"previousValue\" )\n\t\t\t\t.removeAttr( \"aria-invalid\" );\n\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0; elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ],\n\t\t\t\t\t\tthis.settings.errorClass, \"\" );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\telements.removeClass( this.settings.errorClass );\n\t\t\t}\n\t\t},\n\n\t\tnumberOfInvalids: function() {\n\t\t\treturn this.objectLength( this.invalid );\n\t\t},\n\n\t\tobjectLength: function( obj ) {\n\t\t\t/* jshint unused: false */\n\t\t\tvar count = 0,\n\t\t\t\ti;\n\t\t\tfor ( i in obj ) {\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\thideErrors: function() {\n\t\t\tthis.hideThese( this.toHide );\n\t\t},\n\n\t\thideThese: function( errors ) {\n\t\t\terrors.not( this.containers ).text( \"\" );\n\t\t\tthis.addWrapper( errors ).hide();\n\t\t},\n\n\t\tvalid: function() {\n\t\t\treturn this.size() === 0;\n\t\t},\n\n\t\tsize: function() {\n\t\t\treturn this.errorList.length;\n\t\t},\n\n\t\tfocusInvalid: function() {\n\t\t\tif ( this.settings.focusInvalid ) {\n\t\t\t\ttry {\n\t\t\t\t\t$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [])\n\t\t\t\t\t.filter( \":visible\" )\n\t\t\t\t\t.focus()\n\t\t\t\t\t// manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\n\t\t\t\t\t.trigger( \"focusin\" );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// ignore IE throwing errors when focusing hidden elements\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tfindLastActive: function() {\n\t\t\tvar lastActive = this.lastActive;\n\t\t\treturn lastActive && $.grep( this.errorList, function( n ) {\n\t\t\t\treturn n.element.name === lastActive.name;\n\t\t\t}).length === 1 && lastActive;\n\t\t},\n\n\t\telements: function() {\n\t\t\tvar validator = this,\n\t\t\t\trulesCache = {};\n\n\t\t\t// select all valid inputs inside the form (no submit or reset buttons)\n\t\t\treturn $( this.currentForm )\n\t\t\t.find( \"input, select, textarea\" )\n\t\t\t.not( \":submit, :reset, :image, :disabled\" )\n\t\t\t.not( this.settings.ignore )\n\t\t\t.filter( function() {\n\t\t\t\tif ( !this.name && validator.settings.debug && window.console ) {\n\t\t\t\t\tconsole.error( \"%o has no name assigned\", this );\n\t\t\t\t}\n\n\t\t\t\t// select only the first element for each name, and only those with rules specified\n\t\t\t\tif ( this.name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\trulesCache[ this.name ] = true;\n\t\t\t\treturn true;\n\t\t\t});\n\t\t},\n\n\t\tclean: function( selector ) {\n\t\t\treturn $( selector )[ 0 ];\n\t\t},\n\n\t\terrors: function() {\n\t\t\tvar errorClass = this.settings.errorClass.split( \" \" ).join( \".\" );\n\t\t\treturn $( this.settings.errorElement + \".\" + errorClass, this.errorContext );\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.successList = [];\n\t\t\tthis.errorList = [];\n\t\t\tthis.errorMap = {};\n\t\t\tthis.toShow = $( [] );\n\t\t\tthis.toHide = $( [] );\n\t\t\tthis.currentElements = $( [] );\n\t\t},\n\n\t\tprepareForm: function() {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errors().add( this.containers );\n\t\t},\n\n\t\tprepareElement: function( element ) {\n\t\t\tthis.reset();\n\t\t\tthis.toHide = this.errorsFor( element );\n\t\t},\n\n\t\telementValue: function( element ) {\n\t\t\tvar val,\n\t\t\t\t$element = $( element ),\n\t\t\t\ttype = element.type;\n\n\t\t\tif ( type === \"radio\" || type === \"checkbox\" ) {\n\t\t\t\treturn this.findByName( element.name ).filter(\":checked\").val();\n\t\t\t} else if ( type === \"number\" && typeof element.validity !== \"undefined\" ) {\n\t\t\t\treturn element.validity.badInput ? false : $element.val();\n\t\t\t}\n\n\t\t\tval = $element.val();\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\treturn val.replace(/\\r/g, \"\" );\n\t\t\t}\n\t\t\treturn val;\n\t\t},\n\n\t\tcheck: function( element ) {\n\t\t\telement = this.validationTargetFor( this.clean( element ) );\n\n\t\t\tvar rules = $( element ).rules(),\n\t\t\t\trulesCount = $.map( rules, function( n, i ) {\n\t\t\t\t\treturn i;\n\t\t\t\t}).length,\n\t\t\t\tdependencyMismatch = false,\n\t\t\t\tval = this.elementValue( element ),\n\t\t\t\tresult, method, rule;\n\n\t\t\tfor ( method in rules ) {\n\t\t\t\trule = { method: method, parameters: rules[ method ] };\n\t\t\t\ttry {\n\n\t\t\t\t\tresult = $.validator.methods[ method ].call( this, val, element, rule.parameters );\n\n\t\t\t\t\t// if a method indicates that the field is optional and therefore valid,\n\t\t\t\t\t// don't mark it as valid when there are no other rules\n\t\t\t\t\tif ( result === \"dependency-mismatch\" && rulesCount === 1 ) {\n\t\t\t\t\t\tdependencyMismatch = true;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tdependencyMismatch = false;\n\n\t\t\t\t\tif ( result === \"pending\" ) {\n\t\t\t\t\t\tthis.toHide = this.toHide.not( this.errorsFor( element ) );\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( !result ) {\n\t\t\t\t\t\tthis.formatAndAdd( element, rule );\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\tif ( this.settings.debug && window.console ) {\n\t\t\t\t\t\tconsole.log( \"Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\", e );\n\t\t\t\t\t}\n\t\t\t\t\tif ( e instanceof TypeError ) {\n\t\t\t\t\t\te.message += \".  Exception occurred when checking element \" + element.id + \", check the '\" + rule.method + \"' method.\";\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( dependencyMismatch ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( this.objectLength( rules ) ) {\n\t\t\t\tthis.successList.push( element );\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t// return the custom message for the given element and validation method\n\t\t// specified in the element's HTML5 data attribute\n\t\t// return the generic message if present and no method specific message is present\n\t\tcustomDataMessage: function( element, method ) {\n\t\t\treturn $( element ).data( \"msg\" + method.charAt( 0 ).toUpperCase() +\n\t\t\t\tmethod.substring( 1 ).toLowerCase() ) || $( element ).data( \"msg\" );\n\t\t},\n\n\t\t// return the custom message for the given element name and validation method\n\t\tcustomMessage: function( name, method ) {\n\t\t\tvar m = this.settings.messages[ name ];\n\t\t\treturn m && ( m.constructor === String ? m : m[ method ]);\n\t\t},\n\n\t\t// return the first defined argument, allowing empty strings\n\t\tfindDefined: function() {\n\t\t\tfor ( var i = 0; i < arguments.length; i++) {\n\t\t\t\tif ( arguments[ i ] !== undefined ) {\n\t\t\t\t\treturn arguments[ i ];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\n\t\tdefaultMessage: function( element, method ) {\n\t\t\treturn this.findDefined(\n\t\t\t\tthis.customMessage( element.name, method ),\n\t\t\t\tthis.customDataMessage( element, method ),\n\t\t\t\t// title is never undefined, so handle empty string as undefined\n\t\t\t\t!this.settings.ignoreTitle && element.title || undefined,\n\t\t\t\t$.validator.messages[ method ],\n\t\t\t\t\"<strong>Warning: No message defined for \" + element.name + \"</strong>\"\n\t\t\t);\n\t\t},\n\n\t\tformatAndAdd: function( element, rule ) {\n\t\t\tvar message = this.defaultMessage( element, rule.method ),\n\t\t\t\ttheregex = /\\$?\\{(\\d+)\\}/g;\n\t\t\tif ( typeof message === \"function\" ) {\n\t\t\t\tmessage = message.call( this, rule.parameters, element );\n\t\t\t} else if ( theregex.test( message ) ) {\n\t\t\t\tmessage = $.validator.format( message.replace( theregex, \"{$1}\" ), rule.parameters );\n\t\t\t}\n\t\t\tthis.errorList.push({\n\t\t\t\tmessage: message,\n\t\t\t\telement: element,\n\t\t\t\tmethod: rule.method\n\t\t\t});\n\n\t\t\tthis.errorMap[ element.name ] = message;\n\t\t\tthis.submitted[ element.name ] = message;\n\t\t},\n\n\t\taddWrapper: function( toToggle ) {\n\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\ttoToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );\n\t\t\t}\n\t\t\treturn toToggle;\n\t\t},\n\n\t\tdefaultShowErrors: function() {\n\t\t\tvar i, elements, error;\n\t\t\tfor ( i = 0; this.errorList[ i ]; i++ ) {\n\t\t\t\terror = this.errorList[ i ];\n\t\t\t\tif ( this.settings.highlight ) {\n\t\t\t\t\tthis.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t\tthis.showLabel( error.element, error.message );\n\t\t\t}\n\t\t\tif ( this.errorList.length ) {\n\t\t\t\tthis.toShow = this.toShow.add( this.containers );\n\t\t\t}\n\t\t\tif ( this.settings.success ) {\n\t\t\t\tfor ( i = 0; this.successList[ i ]; i++ ) {\n\t\t\t\t\tthis.showLabel( this.successList[ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( this.settings.unhighlight ) {\n\t\t\t\tfor ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {\n\t\t\t\t\tthis.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toHide = this.toHide.not( this.toShow );\n\t\t\tthis.hideErrors();\n\t\t\tthis.addWrapper( this.toShow ).show();\n\t\t},\n\n\t\tvalidElements: function() {\n\t\t\treturn this.currentElements.not( this.invalidElements() );\n\t\t},\n\n\t\tinvalidElements: function() {\n\t\t\treturn $( this.errorList ).map(function() {\n\t\t\t\treturn this.element;\n\t\t\t});\n\t\t},\n\n\t\tshowLabel: function( element, message ) {\n\t\t\tvar place, group, errorID,\n\t\t\t\terror = this.errorsFor( element ),\n\t\t\t\telementID = this.idOrName( element ),\n\t\t\t\tdescribedBy = $( element ).attr( \"aria-describedby\" );\n\t\t\tif ( error.length ) {\n\t\t\t\t// refresh error/success class\n\t\t\t\terror.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );\n\t\t\t\t// replace message on existing label\n\t\t\t\terror.html( message );\n\t\t\t} else {\n\t\t\t\t// create error element\n\t\t\t\terror = $( \"<\" + this.settings.errorElement + \">\" )\n\t\t\t\t\t.attr( \"id\", elementID + \"-error\" )\n\t\t\t\t\t.addClass( this.settings.errorClass )\n\t\t\t\t\t.html( message || \"\" );\n\n\t\t\t\t// Maintain reference to the element to be placed into the DOM\n\t\t\t\tplace = error;\n\t\t\t\tif ( this.settings.wrapper ) {\n\t\t\t\t\t// make sure the element is visible, even in IE\n\t\t\t\t\t// actually showing the wrapped element is handled elsewhere\n\t\t\t\t\tplace = error.hide().show().wrap( \"<\" + this.settings.wrapper + \"/>\" ).parent();\n\t\t\t\t}\n\t\t\t\tif ( this.labelContainer.length ) {\n\t\t\t\t\tthis.labelContainer.append( place );\n\t\t\t\t} else if ( this.settings.errorPlacement ) {\n\t\t\t\t\tthis.settings.errorPlacement( place, $( element ) );\n\t\t\t\t} else {\n\t\t\t\t\tplace.insertAfter( element );\n\t\t\t\t}\n\n\t\t\t\t// Link error back to the element\n\t\t\t\tif ( error.is( \"label\" ) ) {\n\t\t\t\t\t// If the error is a label, then associate using 'for'\n\t\t\t\t\terror.attr( \"for\", elementID );\n\t\t\t\t} else if ( error.parents( \"label[for='\" + elementID + \"']\" ).length === 0 ) {\n\t\t\t\t\t// If the element is not a child of an associated label, then it's necessary\n\t\t\t\t\t// to explicitly apply aria-describedby\n\n\t\t\t\t\terrorID = error.attr( \"id\" ).replace( /(:|\\.|\\[|\\]|\\$)/g, \"\\\\$1\");\n\t\t\t\t\t// Respect existing non-error aria-describedby\n\t\t\t\t\tif ( !describedBy ) {\n\t\t\t\t\t\tdescribedBy = errorID;\n\t\t\t\t\t} else if ( !describedBy.match( new RegExp( \"\\\\b\" + errorID + \"\\\\b\" ) ) ) {\n\t\t\t\t\t\t// Add to end of list if not already present\n\t\t\t\t\t\tdescribedBy += \" \" + errorID;\n\t\t\t\t\t}\n\t\t\t\t\t$( element ).attr( \"aria-describedby\", describedBy );\n\n\t\t\t\t\t// If this element is grouped, then assign to all elements in the same group\n\t\t\t\t\tgroup = this.groups[ element.name ];\n\t\t\t\t\tif ( group ) {\n\t\t\t\t\t\t$.each( this.groups, function( name, testgroup ) {\n\t\t\t\t\t\t\tif ( testgroup === group ) {\n\t\t\t\t\t\t\t\t$( \"[name='\" + name + \"']\", this.currentForm )\n\t\t\t\t\t\t\t\t\t.attr( \"aria-describedby\", error.attr( \"id\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( !message && this.settings.success ) {\n\t\t\t\terror.text( \"\" );\n\t\t\t\tif ( typeof this.settings.success === \"string\" ) {\n\t\t\t\t\terror.addClass( this.settings.success );\n\t\t\t\t} else {\n\t\t\t\t\tthis.settings.success( error, element );\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.toShow = this.toShow.add( error );\n\t\t},\n\n\t\terrorsFor: function( element ) {\n\t\t\tvar name = this.idOrName( element ),\n\t\t\t\tdescriber = $( element ).attr( \"aria-describedby\" ),\n\t\t\t\tselector = \"label[for='\" + name + \"'], label[for='\" + name + \"'] *\";\n\n\t\t\t// aria-describedby should directly reference the error element\n\t\t\tif ( describer ) {\n\t\t\t\tselector = selector + \", #\" + describer.replace( /\\s+/g, \", #\" );\n\t\t\t}\n\t\t\treturn this\n\t\t\t\t.errors()\n\t\t\t\t.filter( selector );\n\t\t},\n\n\t\tidOrName: function( element ) {\n\t\t\treturn this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );\n\t\t},\n\n\t\tvalidationTargetFor: function( element ) {\n\n\t\t\t// If radio/checkbox, validate first element in group instead\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\telement = this.findByName( element.name );\n\t\t\t}\n\n\t\t\t// Always apply ignore filter\n\t\t\treturn $( element ).not( this.settings.ignore )[ 0 ];\n\t\t},\n\n\t\tcheckable: function( element ) {\n\t\t\treturn ( /radio|checkbox/i ).test( element.type );\n\t\t},\n\n\t\tfindByName: function( name ) {\n\t\t\treturn $( this.currentForm ).find( \"[name='\" + name + \"']\" );\n\t\t},\n\n\t\tgetLength: function( value, element ) {\n\t\t\tswitch ( element.nodeName.toLowerCase() ) {\n\t\t\tcase \"select\":\n\t\t\t\treturn $( \"option:selected\", element ).length;\n\t\t\tcase \"input\":\n\t\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\t\treturn this.findByName( element.name ).filter( \":checked\" ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn value.length;\n\t\t},\n\n\t\tdepend: function( param, element ) {\n\t\t\treturn this.dependTypes[typeof param] ? this.dependTypes[typeof param]( param, element ) : true;\n\t\t},\n\n\t\tdependTypes: {\n\t\t\t\"boolean\": function( param ) {\n\t\t\t\treturn param;\n\t\t\t},\n\t\t\t\"string\": function( param, element ) {\n\t\t\t\treturn !!$( param, element.form ).length;\n\t\t\t},\n\t\t\t\"function\": function( param, element ) {\n\t\t\t\treturn param( element );\n\t\t\t}\n\t\t},\n\n\t\toptional: function( element ) {\n\t\t\tvar val = this.elementValue( element );\n\t\t\treturn !$.validator.methods.required.call( this, val, element ) && \"dependency-mismatch\";\n\t\t},\n\n\t\tstartRequest: function( element ) {\n\t\t\tif ( !this.pending[ element.name ] ) {\n\t\t\t\tthis.pendingRequest++;\n\t\t\t\tthis.pending[ element.name ] = true;\n\t\t\t}\n\t\t},\n\n\t\tstopRequest: function( element, valid ) {\n\t\t\tthis.pendingRequest--;\n\t\t\t// sometimes synchronization fails, make sure pendingRequest is never < 0\n\t\t\tif ( this.pendingRequest < 0 ) {\n\t\t\t\tthis.pendingRequest = 0;\n\t\t\t}\n\t\t\tdelete this.pending[ element.name ];\n\t\t\tif ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {\n\t\t\t\t$( this.currentForm ).submit();\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t} else if (!valid && this.pendingRequest === 0 && this.formSubmitted ) {\n\t\t\t\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ]);\n\t\t\t\tthis.formSubmitted = false;\n\t\t\t}\n\t\t},\n\n\t\tpreviousValue: function( element ) {\n\t\t\treturn $.data( element, \"previousValue\" ) || $.data( element, \"previousValue\", {\n\t\t\t\told: null,\n\t\t\t\tvalid: true,\n\t\t\t\tmessage: this.defaultMessage( element, \"remote\" )\n\t\t\t});\n\t\t},\n\n\t\t// cleans up all forms and elements, removes validator-specific events\n\t\tdestroy: function() {\n\t\t\tthis.resetForm();\n\n\t\t\t$( this.currentForm )\n\t\t\t\t.off( \".validate\" )\n\t\t\t\t.removeData( \"validator\" );\n\t\t}\n\n\t},\n\n\tclassRuleSettings: {\n\t\trequired: { required: true },\n\t\temail: { email: true },\n\t\turl: { url: true },\n\t\tdate: { date: true },\n\t\tdateISO: { dateISO: true },\n\t\tnumber: { number: true },\n\t\tdigits: { digits: true },\n\t\tcreditcard: { creditcard: true }\n\t},\n\n\taddClassRules: function( className, rules ) {\n\t\tif ( className.constructor === String ) {\n\t\t\tthis.classRuleSettings[ className ] = rules;\n\t\t} else {\n\t\t\t$.extend( this.classRuleSettings, className );\n\t\t}\n\t},\n\n\tclassRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tclasses = $( element ).attr( \"class\" );\n\n\t\tif ( classes ) {\n\t\t\t$.each( classes.split( \" \" ), function() {\n\t\t\t\tif ( this in $.validator.classRuleSettings ) {\n\t\t\t\t\t$.extend( rules, $.validator.classRuleSettings[ this ]);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeAttributeRule: function( rules, type, method, value ) {\n\n\t\t// convert the value to a number for number inputs, and for text for backwards compability\n\t\t// allows type=\"date\" and others to be compared as strings\n\t\tif ( /min|max/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {\n\t\t\tvalue = Number( value );\n\n\t\t\t// Support Opera Mini, which returns NaN for undefined minlength\n\t\t\tif ( isNaN( value ) ) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\t\t}\n\n\t\tif ( value || value === 0 ) {\n\t\t\trules[ method ] = value;\n\t\t} else if ( type === method && type !== \"range\" ) {\n\n\t\t\t// exception: the jquery validate 'range' method\n\t\t\t// does not test for the html5 'range' type\n\t\t\trules[ method ] = true;\n\t\t}\n\t},\n\n\tattributeRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\n\t\t\t// support for <input required> in both html5 and older browsers\n\t\t\tif ( method === \"required\" ) {\n\t\t\t\tvalue = element.getAttribute( method );\n\n\t\t\t\t// Some browsers return an empty string for the required attribute\n\t\t\t\t// and non-HTML5 browsers might have required=\"\" markup\n\t\t\t\tif ( value === \"\" ) {\n\t\t\t\t\tvalue = true;\n\t\t\t\t}\n\n\t\t\t\t// force non-HTML5 browsers to return bool\n\t\t\t\tvalue = !!value;\n\t\t\t} else {\n\t\t\t\tvalue = $element.attr( method );\n\t\t\t}\n\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\n\t\t// maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\n\t\tif ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {\n\t\t\tdelete rules.maxlength;\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\tdataRules: function( element ) {\n\t\tvar rules = {},\n\t\t\t$element = $( element ),\n\t\t\ttype = element.getAttribute( \"type\" ),\n\t\t\tmethod, value;\n\n\t\tfor ( method in $.validator.methods ) {\n\t\t\tvalue = $element.data( \"rule\" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );\n\t\t\tthis.normalizeAttributeRule( rules, type, method, value );\n\t\t}\n\t\treturn rules;\n\t},\n\n\tstaticRules: function( element ) {\n\t\tvar rules = {},\n\t\t\tvalidator = $.data( element.form, \"validator\" );\n\n\t\tif ( validator.settings.rules ) {\n\t\t\trules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};\n\t\t}\n\t\treturn rules;\n\t},\n\n\tnormalizeRules: function( rules, element ) {\n\t\t// handle dependency check\n\t\t$.each( rules, function( prop, val ) {\n\t\t\t// ignore rule when param is explicitly false, eg. required:false\n\t\t\tif ( val === false ) {\n\t\t\t\tdelete rules[ prop ];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( val.param || val.depends ) {\n\t\t\t\tvar keepRule = true;\n\t\t\t\tswitch ( typeof val.depends ) {\n\t\t\t\tcase \"string\":\n\t\t\t\t\tkeepRule = !!$( val.depends, element.form ).length;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"function\":\n\t\t\t\t\tkeepRule = val.depends.call( element, element );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif ( keepRule ) {\n\t\t\t\t\trules[ prop ] = val.param !== undefined ? val.param : true;\n\t\t\t\t} else {\n\t\t\t\t\tdelete rules[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// evaluate parameters\n\t\t$.each( rules, function( rule, parameter ) {\n\t\t\trules[ rule ] = $.isFunction( parameter ) ? parameter( element ) : parameter;\n\t\t});\n\n\t\t// clean number parameters\n\t\t$.each([ \"minlength\", \"maxlength\" ], function() {\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\trules[ this ] = Number( rules[ this ] );\n\t\t\t}\n\t\t});\n\t\t$.each([ \"rangelength\", \"range\" ], function() {\n\t\t\tvar parts;\n\t\t\tif ( rules[ this ] ) {\n\t\t\t\tif ( $.isArray( rules[ this ] ) ) {\n\t\t\t\t\trules[ this ] = [ Number( rules[ this ][ 0 ]), Number( rules[ this ][ 1 ] ) ];\n\t\t\t\t} else if ( typeof rules[ this ] === \"string\" ) {\n\t\t\t\t\tparts = rules[ this ].replace(/[\\[\\]]/g, \"\" ).split( /[\\s,]+/ );\n\t\t\t\t\trules[ this ] = [ Number( parts[ 0 ]), Number( parts[ 1 ] ) ];\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ( $.validator.autoCreateRanges ) {\n\t\t\t// auto-create ranges\n\t\t\tif ( rules.min != null && rules.max != null ) {\n\t\t\t\trules.range = [ rules.min, rules.max ];\n\t\t\t\tdelete rules.min;\n\t\t\t\tdelete rules.max;\n\t\t\t}\n\t\t\tif ( rules.minlength != null && rules.maxlength != null ) {\n\t\t\t\trules.rangelength = [ rules.minlength, rules.maxlength ];\n\t\t\t\tdelete rules.minlength;\n\t\t\t\tdelete rules.maxlength;\n\t\t\t}\n\t\t}\n\n\t\treturn rules;\n\t},\n\n\t// Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\n\tnormalizeRule: function( data ) {\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tvar transformed = {};\n\t\t\t$.each( data.split( /\\s/ ), function() {\n\t\t\t\ttransformed[ this ] = true;\n\t\t\t});\n\t\t\tdata = transformed;\n\t\t}\n\t\treturn data;\n\t},\n\n\t// http://jqueryvalidation.org/jQuery.validator.addMethod/\n\taddMethod: function( name, method, message ) {\n\t\t$.validator.methods[ name ] = method;\n\t\t$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];\n\t\tif ( method.length < 3 ) {\n\t\t\t$.validator.addClassRules( name, $.validator.normalizeRule( name ) );\n\t\t}\n\t},\n\n\tmethods: {\n\n\t\t// http://jqueryvalidation.org/required-method/\n\t\trequired: function( value, element, param ) {\n\t\t\t// check if dependency is met\n\t\t\tif ( !this.depend( param, element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\tif ( element.nodeName.toLowerCase() === \"select\" ) {\n\t\t\t\t// could be an array for select-multiple or a string, both are fine this way\n\t\t\t\tvar val = $( element ).val();\n\t\t\t\treturn val && val.length > 0;\n\t\t\t}\n\t\t\tif ( this.checkable( element ) ) {\n\t\t\t\treturn this.getLength( value, element ) > 0;\n\t\t\t}\n\t\t\treturn value.length > 0;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/email-method/\n\t\temail: function( value, element ) {\n\t\t\t// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\n\t\t\t// Retrieved 2014-01-14\n\t\t\t// If you have a problem with this implementation, report a bug against the above spec\n\t\t\t// Or use custom methods to implement your own email validation\n\t\t\treturn this.optional( element ) || /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/url-method/\n\t\turl: function( value, element ) {\n\n\t\t\t// Copyright (c) 2010-2013 Diego Perini, MIT licensed\n\t\t\t// https://gist.github.com/dperini/729294\n\t\t\t// see also https://mathiasbynens.be/demo/url-regex\n\t\t\t// modified to allow protocol-relative URLs\n\t\t\treturn this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})).?)(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/date-method/\n\t\tdate: function( value, element ) {\n\t\t\treturn this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/dateISO-method/\n\t\tdateISO: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d{4}[\\/\\-](0?[1-9]|1[012])[\\/\\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/number-method/\n\t\tnumber: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/digits-method/\n\t\tdigits: function( value, element ) {\n\t\t\treturn this.optional( element ) || /^\\d+$/.test( value );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/creditcard-method/\n\t\t// based on http://en.wikipedia.org/wiki/Luhn_algorithm\n\t\tcreditcard: function( value, element ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\t\t\t// accept only spaces, digits and dashes\n\t\t\tif ( /[^0-9 \\-]+/.test( value ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar nCheck = 0,\n\t\t\t\tnDigit = 0,\n\t\t\t\tbEven = false,\n\t\t\t\tn, cDigit;\n\n\t\t\tvalue = value.replace( /\\D/g, \"\" );\n\n\t\t\t// Basing min and max length on\n\t\t\t// http://developer.ean.com/general_info/Valid_Credit_Card_Types\n\t\t\tif ( value.length < 13 || value.length > 19 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tfor ( n = value.length - 1; n >= 0; n--) {\n\t\t\t\tcDigit = value.charAt( n );\n\t\t\t\tnDigit = parseInt( cDigit, 10 );\n\t\t\t\tif ( bEven ) {\n\t\t\t\t\tif ( ( nDigit *= 2 ) > 9 ) {\n\t\t\t\t\t\tnDigit -= 9;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnCheck += nDigit;\n\t\t\t\tbEven = !bEven;\n\t\t\t}\n\n\t\t\treturn ( nCheck % 10 ) === 0;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/minlength-method/\n\t\tminlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length >= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/maxlength-method/\n\t\tmaxlength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || length <= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/rangelength-method/\n\t\trangelength: function( value, element, param ) {\n\t\t\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\n\t\t\treturn this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/min-method/\n\t\tmin: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value >= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/max-method/\n\t\tmax: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || value <= param;\n\t\t},\n\n\t\t// http://jqueryvalidation.org/range-method/\n\t\trange: function( value, element, param ) {\n\t\t\treturn this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );\n\t\t},\n\n\t\t// http://jqueryvalidation.org/equalTo-method/\n\t\tequalTo: function( value, element, param ) {\n\t\t\t// bind to the blur event of the target in order to revalidate whenever the target field is updated\n\t\t\t// TODO find a way to bind the event just once, avoiding the unbind-rebind overhead\n\t\t\tvar target = $( param );\n\t\t\tif ( this.settings.onfocusout ) {\n\t\t\t\ttarget.off( \".validate-equalTo\" ).on( \"blur.validate-equalTo\", function() {\n\t\t\t\t\t$( element ).valid();\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn value === target.val();\n\t\t},\n\n\t\t// http://jqueryvalidation.org/remote-method/\n\t\tremote: function( value, element, param ) {\n\t\t\tif ( this.optional( element ) ) {\n\t\t\t\treturn \"dependency-mismatch\";\n\t\t\t}\n\n\t\t\tvar previous = this.previousValue( element ),\n\t\t\t\tvalidator, data;\n\n\t\t\tif (!this.settings.messages[ element.name ] ) {\n\t\t\t\tthis.settings.messages[ element.name ] = {};\n\t\t\t}\n\t\t\tprevious.originalMessage = this.settings.messages[ element.name ].remote;\n\t\t\tthis.settings.messages[ element.name ].remote = previous.message;\n\n\t\t\tparam = typeof param === \"string\" && { url: param } || param;\n\n\t\t\tif ( previous.old === value ) {\n\t\t\t\treturn previous.valid;\n\t\t\t}\n\n\t\t\tprevious.old = value;\n\t\t\tvalidator = this;\n\t\t\tthis.startRequest( element );\n\t\t\tdata = {};\n\t\t\tdata[ element.name ] = value;\n\t\t\t$.ajax( $.extend( true, {\n\t\t\t\tmode: \"abort\",\n\t\t\t\tport: \"validate\" + element.name,\n\t\t\t\tdataType: \"json\",\n\t\t\t\tdata: data,\n\t\t\t\tcontext: validator.currentForm,\n\t\t\t\tsuccess: function( response ) {\n\t\t\t\t\tvar valid = response === true || response === \"true\",\n\t\t\t\t\t\terrors, message, submitted;\n\n\t\t\t\t\tvalidator.settings.messages[ element.name ].remote = previous.originalMessage;\n\t\t\t\t\tif ( valid ) {\n\t\t\t\t\t\tsubmitted = validator.formSubmitted;\n\t\t\t\t\t\tvalidator.prepareElement( element );\n\t\t\t\t\t\tvalidator.formSubmitted = submitted;\n\t\t\t\t\t\tvalidator.successList.push( element );\n\t\t\t\t\t\tdelete validator.invalid[ element.name ];\n\t\t\t\t\t\tvalidator.showErrors();\n\t\t\t\t\t} else {\n\t\t\t\t\t\terrors = {};\n\t\t\t\t\t\tmessage = response || validator.defaultMessage( element, \"remote\" );\n\t\t\t\t\t\terrors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message;\n\t\t\t\t\t\tvalidator.invalid[ element.name ] = true;\n\t\t\t\t\t\tvalidator.showErrors( errors );\n\t\t\t\t\t}\n\t\t\t\t\tprevious.valid = valid;\n\t\t\t\t\tvalidator.stopRequest( element, valid );\n\t\t\t\t}\n\t\t\t}, param ) );\n\t\t\treturn \"pending\";\n\t\t}\n\t}\n\n});\n\n// ajax mode: abort\n// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\n// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\n\nvar pendingRequests = {},\n\tajax;\n// Use a prefilter if available (1.5+)\nif ( $.ajaxPrefilter ) {\n\t$.ajaxPrefilter(function( settings, _, xhr ) {\n\t\tvar port = settings.port;\n\t\tif ( settings.mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[port] ) {\n\t\t\t\tpendingRequests[port].abort();\n\t\t\t}\n\t\t\tpendingRequests[port] = xhr;\n\t\t}\n\t});\n} else {\n\t// Proxy ajax\n\tajax = $.ajax;\n\t$.ajax = function( settings ) {\n\t\tvar mode = ( \"mode\" in settings ? settings : $.ajaxSettings ).mode,\n\t\t\tport = ( \"port\" in settings ? settings : $.ajaxSettings ).port;\n\t\tif ( mode === \"abort\" ) {\n\t\t\tif ( pendingRequests[port] ) {\n\t\t\t\tpendingRequests[port].abort();\n\t\t\t}\n\t\t\tpendingRequests[port] = ajax.apply(this, arguments);\n\t\t\treturn pendingRequests[port];\n\t\t}\n\t\treturn ajax.apply(this, arguments);\n\t};\n}\n\n}));","function strlen(string) {\r\n  //  discuss at: http://phpjs.org/functions/strlen/\r\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: Sakimori\r\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  //    input by: Kirk Strobeck\r\n  // bugfixed by: Onno Marsman\r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\r\n  //        note: May look like overkill, but in order to be truly faithful to handling all Unicode\r\n  //        note: characters and to this function in PHP which does not count the number of bytes\r\n  //        note: but counts the number of characters, something like this is really necessary.\r\n  //   example 1: strlen('Kevin van Zonneveld');\r\n  //   returns 1: 19\r\n  //   example 2: ini_set('unicode.semantics', 'on');\r\n  //   example 2: strlen('A\\ud87e\\udc04Z');\r\n  //   returns 2: 3\r\n\r\n  var str = string + '';\r\n  var i = 0,\r\n    chr = '',\r\n    lgth = 0;\r\n\r\n  if (!this.php_js || !this.php_js.ini || !this.php_js.ini['unicode.semantics'] || this.php_js.ini[\r\n      'unicode.semantics'].local_value.toLowerCase() !== 'on') {\r\n    return string.length;\r\n  }\r\n\r\n  var getWholeChar = function(str, i) {\r\n    var code = str.charCodeAt(i);\r\n    var next = '',\r\n      prev = '';\r\n    if (0xD800 <= code && code <= 0xDBFF) {\r\n      // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)\r\n      if (str.length <= (i + 1)) {\r\n        throw 'High surrogate without following low surrogate';\r\n      }\r\n      next = str.charCodeAt(i + 1);\r\n      if (0xDC00 > next || next > 0xDFFF) {\r\n        throw 'High surrogate without following low surrogate';\r\n      }\r\n      return str.charAt(i) + str.charAt(i + 1);\r\n    } else if (0xDC00 <= code && code <= 0xDFFF) {\r\n      // Low surrogate\r\n      if (i === 0) {\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      prev = str.charCodeAt(i - 1);\r\n      if (0xD800 > prev || prev > 0xDBFF) {\r\n        //(could change last hex to 0xDB7F to treat high private surrogates as single characters)\r\n        throw 'Low surrogate without preceding high surrogate';\r\n      }\r\n      // We can pass over low surrogates now as the second component in a pair which we have already processed\r\n      return false;\r\n    }\r\n    return str.charAt(i);\r\n  };\r\n\r\n  for (i = 0, lgth = 0; i < str.length; i++) {\r\n    if ((chr = getWholeChar(str, i)) === false) {\r\n      continue;\r\n    } // Adapt this line at the top of any loop, passing in the whole string and the current iteration and returning a variable to represent the individual character; purpose is to treat the first part of a surrogate pair as the whole character and then ignore the second part\r\n    lgth++;\r\n  }\r\n  return lgth;\r\n}","function array_diff(arr1) {\r\n  //  discuss at: http://phpjs.org/functions/array_diff/\r\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: Sanjoy Roy\r\n  //  revised by: Brett Zamir (http://brett-zamir.me)\r\n  //   example 1: array_diff(['Kevin', 'van', 'Zonneveld'], ['van', 'Zonneveld']);\r\n  //   returns 1: {0:'Kevin'}\r\n\r\n  var retArr = {},\r\n    argl = arguments.length,\r\n    k1 = '',\r\n    i = 1,\r\n    k = '',\r\n    arr = {};\r\n\r\n  arr1keys: for (k1 in arr1) {\r\n    for (i = 1; i < argl; i++) {\r\n      arr = arguments[i];\r\n      for (k in arr) {\r\n        if (arr[k] === arr1[k1]) {\r\n          // If it reaches here, it was found in at least one array, so try next value\r\n          continue arr1keys;\r\n        }\r\n      }\r\n      retArr[k1] = arr1[k1];\r\n    }\r\n  }\r\n\r\n  return retArr;\r\n}","function strtotime(text, now) {\r\n  //  discuss at: http://phpjs.org/functions/strtotime/\r\n  //     version: 1109.2016\r\n  // original by: Caio Ariede (http://caioariede.com)\r\n  // improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: Caio Ariede (http://caioariede.com)\r\n  // improved by: A. Matías Quezada (http://amatiasq.com)\r\n  // improved by: preuter\r\n  // improved by: Brett Zamir (http://brett-zamir.me)\r\n  // improved by: Mirko Faber\r\n  //    input by: David\r\n  // bugfixed by: Wagner B. Soares\r\n  // bugfixed by: Artur Tchernychev\r\n  // bugfixed by: Stephan Bösch-Plepelits (http://github.com/plepe)\r\n  //        note: Examples all have a fixed timestamp to prevent tests to fail because of variable time(zones)\r\n  //   example 1: strtotime('+1 day', 1129633200);\r\n  //   returns 1: 1129719600\r\n  //   example 2: strtotime('+1 week 2 days 4 hours 2 seconds', 1129633200);\r\n  //   returns 2: 1130425202\r\n  //   example 3: strtotime('last month', 1129633200);\r\n  //   returns 3: 1127041200\r\n  //   example 4: strtotime('2009-05-04 08:30:00 GMT');\r\n  //   returns 4: 1241425800\r\n  //   example 5: strtotime('2009-05-04 08:30:00+00');\r\n  //   returns 5: 1241425800\r\n  //   example 6: strtotime('2009-05-04 08:30:00+02:00');\r\n  //   returns 6: 1241418600\r\n  //   example 7: strtotime('2009-05-04T08:30:00Z');\r\n  //   returns 7: 1241425800\r\n\r\n  var parsed, match, today, year, date, days, ranges, len, times, regex, i, fail = false;\r\n\r\n  if (!text) {\r\n    return fail;\r\n  }\r\n\r\n  // Unecessary spaces\r\n  text = text.replace(/^\\s+|\\s+$/g, '')\r\n    .replace(/\\s{2,}/g, ' ')\r\n    .replace(/[\\t\\r\\n]/g, '')\r\n    .toLowerCase();\r\n\r\n  // in contrast to php, js Date.parse function interprets:\r\n  // dates given as yyyy-mm-dd as in timezone: UTC,\r\n  // dates with \".\" or \"-\" as MDY instead of DMY\r\n  // dates with two-digit years differently\r\n  // etc...etc...\r\n  // ...therefore we manually parse lots of common date formats\r\n  match = text.match(\r\n    /^(\\d{1,4})([\\-\\.\\/\\:])(\\d{1,2})([\\-\\.\\/\\:])(\\d{1,4})(?:\\s(\\d{1,2}):(\\d{2})?:?(\\d{2})?)?(?:\\s([A-Z]+)?)?$/);\r\n\r\n  if (match && match[2] === match[4]) {\r\n    if (match[1] > 1901) {\r\n      switch (match[2]) {\r\n      case '-': {\r\n        // YYYY-M-D\r\n        if (match[3] > 12 || match[5] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '.': {\r\n        // YYYY.M.D is not parsed by strtotime()\r\n        return fail;\r\n      }\r\n      case '/': {\r\n        // YYYY/M/D\r\n        if (match[3] > 12 || match[5] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[1], parseInt(match[3], 10) - 1, match[5],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      }\r\n    } else if (match[5] > 1901) {\r\n      switch (match[2]) {\r\n      case '-': {\r\n        // D-M-YYYY\r\n        if (match[3] > 12 || match[1] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '.': {\r\n        // D.M.YYYY\r\n        if (match[3] > 12 || match[1] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '/': {\r\n        // M/D/YYYY\r\n        if (match[1] > 12 || match[3] > 31) {\r\n          return fail;\r\n        }\r\n\r\n        return new Date(match[5], parseInt(match[1], 10) - 1, match[3],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      }\r\n    } else {\r\n      switch (match[2]) {\r\n      case '-': {\r\n        // YY-M-D\r\n        if (match[3] > 12 || match[5] > 31 || (match[1] < 70 && match[1] > 38)) {\r\n          return fail;\r\n        }\r\n\r\n        year = match[1] >= 0 && match[1] <= 38 ? +match[1] + 2000 : match[1];\r\n        return new Date(year, parseInt(match[3], 10) - 1, match[5],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case '.': {\r\n        // D.M.YY or H.MM.SS\r\n        if (match[5] >= 70) {\r\n          // D.M.YY\r\n          if (match[3] > 12 || match[1] > 31) {\r\n            return fail;\r\n          }\r\n\r\n          return new Date(match[5], parseInt(match[3], 10) - 1, match[1],\r\n            match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n        }\r\n        if (match[5] < 60 && !match[6]) {\r\n          // H.MM.SS\r\n          if (match[1] > 23 || match[3] > 59) {\r\n            return fail;\r\n          }\r\n\r\n          today = new Date();\r\n          return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\r\n            match[1] || 0, match[3] || 0, match[5] || 0, match[9] || 0) / 1000;\r\n        }\r\n\r\n        // invalid format, cannot be parsed\r\n        return fail;\r\n      }\r\n      case '/': {\r\n        // M/D/YY\r\n        if (match[1] > 12 || match[3] > 31 || (match[5] < 70 && match[5] > 38)) {\r\n          return fail;\r\n        }\r\n\r\n        year = match[5] >= 0 && match[5] <= 38 ? +match[5] + 2000 : match[5];\r\n        return new Date(year, parseInt(match[1], 10) - 1, match[3],\r\n          match[6] || 0, match[7] || 0, match[8] || 0, match[9] || 0) / 1000;\r\n      }\r\n      case ':': {\r\n        // HH:MM:SS\r\n        if (match[1] > 23 || match[3] > 59 || match[5] > 59) {\r\n          return fail;\r\n        }\r\n\r\n        today = new Date();\r\n        return new Date(today.getFullYear(), today.getMonth(), today.getDate(),\r\n          match[1] || 0, match[3] || 0, match[5] || 0) / 1000;\r\n      }\r\n      }\r\n    }\r\n  }\r\n\r\n  // other formats and \"now\" should be parsed by Date.parse()\r\n  if (text === 'now') {\r\n    return now === null || isNaN(now) ? new Date()\r\n      .getTime() / 1000 | 0 : now | 0;\r\n  }\r\n  if (!isNaN(parsed = Date.parse(text))) {\r\n    return parsed / 1000 | 0;\r\n  }\r\n  // Browsers != Chrome have problems parsing ISO 8601 date strings, as they do\r\n  // not accept lower case characters, space, or shortened time zones.\r\n  // Therefore, fix these problems and try again.\r\n  // Examples:\r\n  //   2015-04-15 20:33:59+02\r\n  //   2015-04-15 20:33:59z\r\n  //   2015-04-15t20:33:59+02:00\r\n  if (match = text.match(\r\n      /^([0-9]{4}-[0-9]{2}-[0-9]{2})[ t]([0-9]{2}:[0-9]{2}:[0-9]{2}(\\.[0-9]+)?)([\\+-][0-9]{2}(:[0-9]{2})?|z)/)) {\r\n    // fix time zone information\r\n    if (match[4] == 'z') {\r\n      match[4] = 'Z';\r\n    } else if (match[4].match(/^([\\+-][0-9]{2})$/)) {\r\n      match[4] = match[4] + ':00';\r\n    }\r\n\r\n    if (!isNaN(parsed = Date.parse(match[1] + 'T' + match[2] + match[4]))) {\r\n      return parsed / 1000 | 0;\r\n    }\r\n  }\r\n\r\n  date = now ? new Date(now * 1000) : new Date();\r\n  days = {\r\n    'sun' : 0,\r\n    'mon' : 1,\r\n    'tue' : 2,\r\n    'wed' : 3,\r\n    'thu' : 4,\r\n    'fri' : 5,\r\n    'sat' : 6\r\n  };\r\n  ranges = {\r\n    'yea' : 'FullYear',\r\n    'mon' : 'Month',\r\n    'day' : 'Date',\r\n    'hou' : 'Hours',\r\n    'min' : 'Minutes',\r\n    'sec' : 'Seconds'\r\n  };\r\n\r\n  function lastNext(type, range, modifier) {\r\n    var diff, day = days[range];\r\n\r\n    if (typeof day !== 'undefined') {\r\n      diff = day - date.getDay();\r\n\r\n      if (diff === 0) {\r\n        diff = 7 * modifier;\r\n      } else if (diff > 0 && type === 'last') {\r\n        diff -= 7;\r\n      } else if (diff < 0 && type === 'next') {\r\n        diff += 7;\r\n      }\r\n\r\n      date.setDate(date.getDate() + diff);\r\n    }\r\n  }\r\n\r\n  function process(val) {\r\n    var splt = val.split(' '), // Todo: Reconcile this with regex using \\s, taking into account browser issues with split and regexes\r\n      type = splt[0],\r\n      range = splt[1].substring(0, 3),\r\n      typeIsNumber = /\\d+/.test(type),\r\n      ago = splt[2] === 'ago',\r\n      num = (type === 'last' ? -1 : 1) * (ago ? -1 : 1);\r\n\r\n    if (typeIsNumber) {\r\n      num *= parseInt(type, 10);\r\n    }\r\n\r\n    if (ranges.hasOwnProperty(range) && !splt[1].match(/^mon(day|\\.)?$/i)) {\r\n      return date['set' + ranges[range]](date['get' + ranges[range]]() + num);\r\n    }\r\n\r\n    if (range === 'wee') {\r\n      return date.setDate(date.getDate() + (num * 7));\r\n    }\r\n\r\n    if (type === 'next' || type === 'last') {\r\n      lastNext(type, range, num);\r\n    } else if (!typeIsNumber) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  times = '(years?|months?|weeks?|days?|hours?|minutes?|min|seconds?|sec' +\r\n    '|sunday|sun\\\\.?|monday|mon\\\\.?|tuesday|tue\\\\.?|wednesday|wed\\\\.?' +\r\n    '|thursday|thu\\\\.?|friday|fri\\\\.?|saturday|sat\\\\.?)';\r\n  regex = '([+-]?\\\\d+\\\\s' + times + '|' + '(last|next)\\\\s' + times + ')(\\\\sago)?';\r\n\r\n  match = text.match(new RegExp(regex, 'gi'));\r\n  if (!match) {\r\n    return fail;\r\n  }\r\n\r\n  for (i = 0, len = match.length; i < len; i++) {\r\n    if (!process(match[i])) {\r\n      return fail;\r\n    }\r\n  }\r\n\r\n  // ECMAScript 5 only\r\n  // if (!match.every(process))\r\n  //    return false;\r\n\r\n  return (date.getTime() / 1000);\r\n}","function is_numeric(mixed_var) {\r\n  //  discuss at: http://phpjs.org/functions/is_numeric/\r\n  // original by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\r\n  // improved by: David\r\n  // improved by: taith\r\n  // bugfixed by: Tim de Koning\r\n  // bugfixed by: WebDevHobo (http://webdevhobo.blogspot.com/)\r\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\r\n  // bugfixed by: Denis Chenu (http://shnoulle.net)\r\n  //   example 1: is_numeric(186.31);\r\n  //   returns 1: true\r\n  //   example 2: is_numeric('Kevin van Zonneveld');\r\n  //   returns 2: false\r\n  //   example 3: is_numeric(' +186.31e2');\r\n  //   returns 3: true\r\n  //   example 4: is_numeric('');\r\n  //   returns 4: false\r\n  //   example 5: is_numeric([]);\r\n  //   returns 5: false\r\n  //   example 6: is_numeric('1 ');\r\n  //   returns 6: false\r\n\r\n  var whitespace =\r\n    \" \\n\\r\\t\\f\\x0b\\xa0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\";\r\n  return (typeof mixed_var === 'number' || (typeof mixed_var === 'string' && whitespace.indexOf(mixed_var.slice(-1)) ===\r\n    -\r\n    1)) && mixed_var !== '' && !isNaN(mixed_var);\r\n}","/*!\n * @copyright Copyright &copy; Kartik Visweswaran, Krajee.com, 2014 - 2015\n * @version 1.3.1\n *\n * Date formatter utility library, that allows you to format date and \n * time variables or Date objects using PHP DateTime format.\n * @see http://php.net/manual/en/function.date.php\n * \n * Authors:\n *      [Kartik Visweswaran](https://github.com/kartik-v)\n *      [Enrica R](https://github.com/Erik-r)\n *\n * For more JQuery plugins visit http://plugins.krajee.com\n * For more Yii related demos visit http://demos.krajee.com\n */\nvar defaultConfig = {\n    dateSettings: {\n        days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n        daysShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n        months: ['January', 'February', 'March', 'April', 'May', 'June',\n            'July', 'August', 'September', 'October', 'November', 'December'],\n        monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n        meridiem: ['AM', 'PM']\n    },\n    separators: /[ \\-+\\/\\.T:@]/g,\n    validParts: /[djDlwSFmMnyYaAgGhHisU]/g\n};\n\nvar DateFormatter = function (options) {\n    var config = $.extend(true, defaultConfig, options);\n    this.dateSettings = config.dateSettings;\n    this.separators = config.separators;\n    this.validParts = config.validParts;\n};\n\nDateFormatter.prototype = {\n    constructor: DateFormatter,\n    parseDate: function (vDate, vFormat) {\n        if (!vDate) {\n            return undefined;\n        }\n        if (vDate instanceof Date) {\n            return vDate;\n        }\n        if (typeof vDate == 'number') {\n            return new Date(vDate);\n        }\n        var self = this,\n            parsedDateTime = {\n                date: null,\n                year: null,\n                month: null,\n                day: null,\n                dayOfWeek: null,\n                hour: 0,\n                min: 0,\n                sec: 0\n            };\n\n        if (vDate instanceof Date) {\n            return vDate;\n        } else if (typeof vDate == 'string') {\n            var vFormatParts = vFormat.match(self.validParts);\n            if (!vFormatParts || vFormatParts.length === 0) {\n                throw new Error(\"Invalid date format definition.\");\n            }\n            var vDateParts = vDate.replace(self.separators, '\\0').split('\\0');\n            var i, vDateFlag = false , vTimeFlag = false;\n            for (i = 0; i < vDateParts.length; i++) {\n                switch (vFormatParts[i]) {\n                    case 'y':\n                    case 'Y':\n                        if (vDateParts[i].length == 2) {\n                            parsedDateTime.year = parseInt(((parseInt(vDateParts[i]) < 70) ? '20' : '19') + vDateParts[i]);\n                        } else if (vDateParts[i].length == 4) {\n                            parsedDateTime.year = parseInt(vDateParts[i]);\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'm':\n                    case 'n':\n                    case 'M':\n                    case 'F':\n                        var vMonth;\n                        if (isNaN(vDateParts[i])) {\n                            vMonth = self.dateSettings.monthsShort.indexOf(vDateParts[i]);\n                            if (vMonth > -1) {\n                                parsedDateTime.month = vMonth + 1;\n                            }\n                            vMonth = self.dateSettings.months.indexOf(vDateParts[i]);\n                            if (vMonth > -1) {\n                                parsedDateTime.month = vMonth + 1;\n                            }\n                        } else {\n                            if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 12) {\n                                parsedDateTime.month = parseInt(vDateParts[i]);\n                            }\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'd':\n                    case 'j':\n                        if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 31) {\n                            parsedDateTime.day = parseInt(vDateParts[i]);\n                        }\n                        vDateFlag = true;\n                        break;\n                    case 'g':\n                    case 'h':\n                        var vMeriIndex = (vFormatParts.indexOf('a') > -1) ? vFormatParts.indexOf('a') :\n                            (vFormatParts.indexOf('A') > -1) ? vFormatParts.indexOf('A') : -1;\n\n                        if (vMeriIndex > -1) {\n                            var vMeriOffset = (vDateParts[vMeriIndex].toLowerCase == self.dateSettings.meridiem[0].toLowerCase) ? 0 :\n                                (vDateParts[vMeriIndex].toLowerCase == self.dateSettings.meridiem[1].toLowerCase) ? 12 : -1;\n\n                            if (parseInt(vDateParts[i]) >= 1 && parseInt(vDateParts[i]) <= 12 && vMeriOffset > -1) {\n                                parsedDateTime.hour = parseInt(vDateParts[i]) + vMeriOffset - 1;\n                            } else if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {\n                                parsedDateTime.hour = parseInt(vDateParts[i]);\n                            }\n                        } else if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {\n                            parsedDateTime.hour = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 'G':\n                    case 'H':\n                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 23) {\n                            parsedDateTime.hour = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 'i':\n                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 59) {\n                            parsedDateTime.min = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                        break;\n                    case 's':\n                        if (parseInt(vDateParts[i]) >= 0 && parseInt(vDateParts[i]) <= 59) {\n                            parsedDateTime.sec = parseInt(vDateParts[i]);\n                        }\n                        vTimeFlag = true;\n                }\n            }\n            if (vDateFlag === true && parsedDateTime.year && parsedDateTime.month && parsedDateTime.day) {\n                parsedDateTime.date = new Date(parsedDateTime.year, parsedDateTime.month - 1, parsedDateTime.day, parsedDateTime.hour, parsedDateTime.min, parsedDateTime.sec, 0);\n                // parsedDateTime.dayOfWeek = parsedDateTime.date.getDay();\n                return parsedDateTime.date;\n            } else if (vTimeFlag === true) {\n                parsedDateTime.date = new Date(0, 0, 0, parsedDateTime.hour, parsedDateTime.min, parsedDateTime.sec, 0);\n                return parsedDateTime.date;\n            } else {\n                return false;\n            }\n        }\n    },\n    guessDate: function (vDateStr, vFormat) {\n        var self = this;\n        if (typeof vDateStr != 'string') {\n            return vDateStr;\n        }\n\n        var vParts = vDateStr.replace(self.separators, '\\0').split('\\0'),\n            vFormatParts = vFormat.match(self.validParts),\n            vPattern = /^[djmn]/g;\n\n        if (vPattern.test(vFormatParts[0])) {\n\n            var vDate = new Date(),\n                vDigit = 0, i;\n\n            for (i = 0; i < vParts.length; i++) {\n                vDigit = 2;\n                switch (i) {\n                    case 0:\n                        if (vFormatParts[0] == 'm' || vFormatParts[0] == 'n') {\n                            vDate.setMonth(parseInt(vParts[i].substr(0, 2)) - 1);\n                        } else {\n                            vDate.setDate(parseInt(vParts[i].substr(0, 2)));\n                        }\n                        break;\n                    case 1:\n                        if (vFormatParts[0] == 'm' || vFormatParts[0] == 'n') {\n                            vDate.setDate(parseInt(vParts[i].substr(0, 2)));\n\n                        } else {\n                            vDate.setMonth(parseInt(vParts[i].substr(0, 2)) - 1);\n                        }\n                        break;\n                    case 2:\n                        var year = vDate.getFullYear();\n                        if (vParts[i].length < 4) {\n                            vDate.setFullYear(parseInt(year.toString().substr(0, 4 - vParts[i].length) + vParts[i]));\n                            vDigit = vParts[i].length;\n                        } else {\n                            vDate.setFullYear = parseInt(vParts[i].substr(0, 4));\n                            vDigit = 4;\n                        }\n                        break;\n                    case 3:\n                        vDate.setHours(parseInt(vParts[i].substr(0, 2)));\n                        break;\n                    case 4:\n                        vDate.setMinutes(parseInt(vParts[i].substr(0, 2)));\n                        break;\n                    case 5:\n                        vDate.setSeconds(parseInt(vParts[i].substr(0, 2)));\n                }\n                if (vParts[i].substr(vDigit).length > 0) {\n                    vParts.splice(i + 1, 0, vParts[i].substr(vDigit));\n                }\n            }\n            return vDate;\n        }\n    },\n    formatDate: function (vDate, vFormat) {\n        var self = this;\n        if (typeof vDate == 'string') {\n            vDate = self.parseDate(vDate, vFormat);\n            if (vDate == false) {\n                return false;\n            }\n        }\n        if (vDate instanceof Date) {\n            var i, vChar, vDateStr = '', self = this;\n            var validParts = /[djDlwSFmMnyYaAgGhHisU]/;\n            for (i = 0; i < vFormat.length; i++) {\n                vChar = vFormat.charAt(i);\n                if (validParts.test(vChar) == true) {\n                    switch (vChar) {\n                        case 'j':\n                            vDateStr += vDate.getDate();\n                            break;\n                        case 'd':\n                            vDateStr += ((vDate.getDate() <= 9) ? '0' : '') + vDate.getDate();\n                            break;\n                        case 'D':\n                            vDateStr += self.dateSettings.daysShort[vDate.getDay()];\n                            break;\n                        case 'l':\n                            vDateStr += self.dateSettings.days[vDate.getDay()];\n                            break;\n                        case 'w':\n                            vDateStr += vDate.getDay();\n                            break;\n                        case 'S':\n                            var vDay = vDate.getDay();\n                            if (vDay == 1 || vDay == 21 || vDay == 31) {\n                                vDateStr += 'st';\n                            } else if (vDay == 2 || vDay == 22) {\n                                vDateStr += 'nd';\n                            } else if (vDay == 3 || vDay == 23) {\n                                vDateStr += 'rd';\n                            } else {\n                                vDateStr += 'th';\n                            }\n                            break;\n                        case 'n':\n                            vDateStr += vDate.getMonth() + 1;\n                            break;\n                        case 'm':\n                            vDateStr += ((vDate.getMonth() <= 8) ? '0' : '') + (vDate.getMonth() + 1);\n                            break;\n                        case 'F':\n                            vDateStr += self.dateSettings.months[vDate.getMonth()];\n                            break;\n                        case 'M':\n                            vDateStr += self.dateSettings.monthsShort[vDate.getMonth()];\n                            break;\n                        case 'Y':\n                            vDateStr += vDate.getFullYear();\n                            break;\n                        case 'y':\n                            vDateStr += vDate.getFullYear().toString().substr(2);\n                            break;\n                        case 'g':\n                            vDateStr += (vDate.getHours() % 12) + 1;\n                            break;\n                        case 'G':\n                            vDateStr += vDate.getHours();\n                            break;\n                        case 'h':\n                            vDateStr += ((vDate.getHours() % 12 <= 8) ? '0' : '') + ((vDate.getHours() % 12) + 1);\n                            break;\n                        case 'H':\n                            vDateStr += ((vDate.getHours() <= 9) ? '0' : '') + vDate.getHours();\n                            break;\n                        case 'a':\n                        case 'A':\n                            vDateStr += (vDate.getHours <= 12) ? self.dateSettings.meridiem[0] : self.dateSettings.meridiem[1];\n                            break;\n                        case 'i':\n                            vDateStr += ((vDate.getMinutes() <= 9) ? '0' : '') + vDate.getMinutes();\n                            break;\n                        case 's':\n                            vDateStr += ((vDate.getSeconds() <= 9) ? '0' : '') + vDate.getSeconds();\n                            break;\n                        case 'U':\n                            vDateStr += vDate.getTime() / 1000;\n                            break;\n                    }\n\n                } else {\n                    vDateStr += vChar;\n                }\n            }\n            return vDateStr;\n        }\n    }\n};\n","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\nvar laravelValidation;\r\nlaravelValidation = {\r\n\r\n    implicitRules: ['Required','Confirmed'],\r\n\r\n    /**\r\n     * Initialize laravel validations\r\n     */\r\n    init: function () {\r\n\r\n        // Disable class rules and attribute rules\r\n        $.validator.classRuleSettings = {};\r\n        $.validator.normalizeAttributeRule = function(){};\r\n\r\n        // Register validations methods\r\n        this.setupValidations();\r\n        \r\n    },\r\n\r\n\r\n    setupValidations: function () {\r\n\r\n        /**\r\n         * Create JQueryValidation check to validate Laravel rules\r\n         */\r\n\r\n        $.validator.addMethod(\"laravelValidation\", function (value, element, params) {\r\n            var validator = this;\r\n            var validated = true;\r\n\r\n            // put Implicit rules in front\r\n            var rules=[];\r\n            $.each(params, function (i, param) {\r\n                if (param[3] || laravelValidation.implicitRules.indexOf(param[0])!== -1) {\r\n                    rules.unshift(param);\r\n                } else {\r\n                    rules.push(param);\r\n                }\r\n            });\r\n\r\n            $.each(rules, function (i, param) {\r\n                var implicit = param[3] || laravelValidation.implicitRules.indexOf(param[0])!== -1;\r\n                var rule = param[0];\r\n                var message = param[2];\r\n\r\n                if ( !implicit && validator.optional( element ) ) {\r\n                    validated=\"dependency-mismatch\";\r\n                    return false;\r\n                }\r\n\r\n\r\n                if (laravelValidation.methods[rule]!==undefined) {\r\n                    validated = laravelValidation.methods[rule].call(validator, value, element, param[1]);\r\n                    /*\r\n                } else if($.validator.methods[rule]!==undefined) {\r\n                    validated = $.validator.methods[rule].call(validator, value, element, param[1]);\r\n                    */\r\n                } else {\r\n                    validated=false;\r\n                }\r\n\r\n                if (validated !== true) {\r\n                    if (!validator.settings.messages[ element.name ] ) {\r\n                        validator.settings.messages[ element.name ] = {};\r\n                    }\r\n                    validator.settings.messages[element.name].laravelValidation= message;\r\n                    return false;\r\n                }\r\n\r\n            });\r\n            return validated;\r\n\r\n        }, \"\");\r\n\r\n\r\n        /**\r\n         * Create JQueryValidation check to validate Remote Laravel rules\r\n         */\r\n\r\n        $.validator.addMethod(\"laravelValidationRemote\", function (value, element, params) {\r\n\r\n            var implicit = false,\r\n                check = params[0][1],\r\n                attribute = check[0],\r\n                token = check[1];\r\n\r\n            $.each(params, function (i, parameters) {\r\n                implicit = implicit || parameters[3];\r\n            });\r\n\r\n\r\n            if ( !implicit && this.optional( element ) ) {\r\n                return \"dependency-mismatch\";\r\n            }\r\n\r\n            var previous = this.previousValue( element ),\r\n                validator, data;\r\n\r\n            if (!this.settings.messages[ element.name ] ) {\r\n                this.settings.messages[ element.name ] = {};\r\n            }\r\n            previous.originalMessage = this.settings.messages[ element.name ].laravelValidationRemote;\r\n            this.settings.messages[ element.name ].laravelValidationRemote = previous.message;\r\n\r\n            var param = typeof param === \"string\" && { url: param } || param;\r\n\r\n            if ( previous.old === value ) {\r\n                return previous.valid;\r\n            }\r\n\r\n            previous.old = value;\r\n            validator = this;\r\n            this.startRequest( element );\r\n\r\n            data = $(validator.currentForm).serializeArray();\r\n\r\n            data.push({\r\n                'name': '_jsvalidation',\r\n                'value': attribute\r\n            });\r\n            \r\n            var formMethod = $(validator.currentForm).attr('method');\r\n            if($(validator.currentForm).find('input[name=\"_method\"]').length) {\r\n                formMethod = $(validator.currentForm).find('input[name=\"_method\"]').val();\r\n            }\r\n\r\n            $.ajax( $.extend( true, {\r\n                mode: \"abort\",\r\n                port: \"validate\" + element.name,\r\n                dataType: \"json\",\r\n                data: data,\r\n                context: validator.currentForm,\r\n                url: $(validator.currentForm).attr('action'),\r\n                type: formMethod,\r\n\r\n                beforeSend: function (xhr) {\r\n                    if ($(validator.currentForm).attr('method').toLowerCase() !== 'get' && token) {\r\n                        return xhr.setRequestHeader('X-XSRF-TOKEN', token);\r\n                    }\r\n                }\r\n\r\n\r\n            }, param )\r\n            ).always(function( response, textStatus, errorThrown ) {\r\n                    var errors, message, submitted, valid;\r\n\r\n                    if (textStatus === 'error') {\r\n                        valid = false;\r\n                        if ('responseText' in response) {\r\n                            var errorMsg = response.responseText.match(/<h1\\s*>(.*)<\\/h1\\s*>/i);\r\n                            if ($.isArray(errorMsg)) {\r\n                                response = [errorMsg[1]];\r\n                            }\r\n                        } else {\r\n                            response = [\"Whoops, looks like something went wrong.\"];\r\n                        }\r\n                    } else if (textStatus === 'success') {\r\n                        valid = response === true || response === \"true\";\r\n                    } else {\r\n                        return;\r\n                    }\r\n\r\n\r\n                    validator.settings.messages[ element.name ].laravelValidationRemote = previous.originalMessage;\r\n\r\n                    if ( valid ) {\r\n                        submitted = validator.formSubmitted;\r\n                        validator.prepareElement( element );\r\n                        validator.formSubmitted = submitted;\r\n                        validator.successList.push( element );\r\n                        delete validator.invalid[ element.name ];\r\n                        validator.showErrors();\r\n                    } else {\r\n                        errors = {};\r\n                        message = response || validator.defaultMessage( element, \"remote\" );\r\n                        errors[ element.name ] = previous.message = $.isFunction( message ) ? message( value ) : message[0];\r\n                        validator.invalid[ element.name ] = true;\r\n                        validator.showErrors( errors );\r\n                    }\r\n                    validator.showErrors(validator.errorMap);\r\n                    previous.valid = valid;\r\n                    validator.stopRequest( element, valid );\r\n                }\r\n            );\r\n            return \"pending\";\r\n\r\n\r\n        }, \"\");\r\n\r\n    }\r\n\r\n\r\n};\r\n\r\n$(function() {\r\n    laravelValidation.init();\r\n});\r\n","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Helper functions used by validators\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\n$.extend(true, laravelValidation, {\r\n\r\n    helpers: {\r\n\r\n        /**\r\n         * Numeric rules\r\n         */\r\n        numericRules: ['Integer', 'Numeric'],\r\n\r\n        /**\r\n         * Gets the file information from file input\r\n         *\r\n         * @param fieldObj\r\n         * @returns {{file: *, extension: string, size: number}}\r\n         */\r\n        fileinfo: function (fieldObj) {\r\n            var FileName = fieldObj.value;\r\n            return {\r\n                file: FileName,\r\n                extension: FileName.substr(FileName.lastIndexOf('.') + 1),\r\n                size: fieldObj.files[0].size / 1024\r\n            };\r\n        },\r\n\r\n\r\n        /**\r\n         *\r\n         * Gets the selectors for th specified field names\r\n         *\r\n         * @param names\r\n         * @returns {string}\r\n         */\r\n        selector: function (names) {\r\n            var selector = [];\r\n            if (!$.isArray(names))  {\r\n                names = [names];\r\n            }\r\n            for (var i = 0; i < names.length; i++) {\r\n                selector.push(\"[name='\" + names[i] + \"']\");\r\n            }\r\n            return selector.join();\r\n        },\r\n\r\n\r\n        /**\r\n         * Check if element has numeric rules\r\n         *\r\n         * @param element\r\n         * @returns {boolean}\r\n         */\r\n        hasNumericRules: function (element) {\r\n            return this.hasRules(element, this.numericRules);\r\n        },\r\n\r\n        /**\r\n         * Check if element has passed ruls rules\r\n         *\r\n         * @param element\r\n         * @param rules\r\n         * @returns {boolean}\r\n         */\r\n        hasRules: function (element, rules) {\r\n\r\n            var found = false;\r\n            if (typeof rules === 'string') {\r\n                rules = [rules];\r\n            }\r\n\r\n            var validator = $.data(element.form, \"validator\");\r\n            var objRules = validator.settings.rules[element.name];\r\n            if ('laravelValidation' in objRules) {\r\n                var _rules=objRules.laravelValidation;\r\n                for (var i = 0; i < _rules.length; i++) {\r\n                    if ($.inArray(_rules[i][0],rules) !== -1) {\r\n                        found = true;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return found;\r\n        },\r\n\r\n        /**\r\n         * Return the string length using PHP function\r\n         * http://php.net/manual/en/function.strlen.php\r\n         * http://phpjs.org/functions/strlen/\r\n         *\r\n         * @param string\r\n         */\r\n        strlen: function (string) {\r\n            return strlen(string);\r\n        },\r\n\r\n\r\n        /**\r\n         * Get the size of the object depending of his type\r\n         *\r\n         * @param obj\r\n         * @param element\r\n         * @param value\r\n         * @returns int\r\n         */\r\n        getSize: function getSize(obj, element, value) {\r\n\r\n            if (this.hasNumericRules(element) && this.is_numeric(value)) {\r\n                return parseFloat(value);\r\n            } else if ($.isArray(value)) {\r\n                return parseFloat(value.length);\r\n            } else if (element.type === 'file') {\r\n                return parseFloat(Math.ceil(this.fileinfo(element).size));\r\n            }\r\n\r\n            return parseFloat(this.strlen(value));\r\n        },\r\n\r\n\r\n        /**\r\n         * Return specified rule from element\r\n         *\r\n         * @param rule\r\n         * @param element\r\n         * @returns object\r\n         */\r\n        getLaravelValidation: function(rule, element) {\r\n\r\n            var found = undefined;\r\n            $.each($.validator.staticRules(element), function(key, rules) {\r\n                if (key===\"laravelValidation\") {\r\n                    $.each(rules, function (i, value) {\r\n                        if (value[0]===rule) {\r\n                            found=value;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            return found;\r\n        },\r\n\r\n\r\n        /**\r\n         * Return he timestamp of value passed using format or default format in element*\r\n         *\r\n         * @param value\r\n         * @param format\r\n         * @returns {boolean|int}\r\n         */\r\n        parseTime: function (value, format) {\r\n\r\n            var timeValue = false;\r\n            var fmt = new DateFormatter();\r\n\r\n            if ($.type(format) === 'object') {\r\n                var dateRule=this.getLaravelValidation('DateFormat', format);\r\n                if (dateRule !== undefined) {\r\n                    format = dateRule[1][0];\r\n                } else {\r\n                    format = null;\r\n                }\r\n            }\r\n\r\n            if (format == null) {\r\n                timeValue = this.strtotime(value);\r\n            } else {\r\n                timeValue = fmt.parseDate(value, format);\r\n                if (timeValue) {\r\n                    timeValue = Math.round((timeValue.getTime() / 1000));\r\n                }\r\n            }\r\n\r\n            return timeValue;\r\n        },\r\n\r\n        /**\r\n         * This method allows you to intelligently guess the date by closely matching the specific format.\r\n         * @param value\r\n         * @param format\r\n         * @returns {Date}\r\n         */\r\n        gessDate: function (value, format) {\r\n            var fmt = new DateFormatter();\r\n            return fmt.guessDate(value, format)\r\n        },\r\n\r\n        /**\r\n         * Returns Unix timestamp based on PHP function strototime\r\n         * http://php.net/manual/es/function.strtotime.php\r\n         * http://phpjs.org/functions/strtotime/\r\n         *\r\n         * @param text\r\n         * @param now\r\n         * @returns {*}\r\n         */\r\n        strtotime: function (text, now) {\r\n            return strtotime(text, now)\r\n        },\r\n\r\n        /**\r\n         * Returns if value is numeric\r\n         * http://php.net/manual/es/var.is_numeric.php\r\n         * http://phpjs.org/functions/is_numeric/\r\n         *\r\n         * @param mixed_var\r\n         * @returns {*}\r\n         */\r\n        is_numeric: function (mixed_var) {\r\n            return is_numeric(mixed_var)\r\n        },\r\n\r\n        /**\r\n         * Returns Array diff based on PHP function array_diff\r\n         * http://php.net/manual/es/function.array_diff.php\r\n         * http://phpjs.org/functions/array_diff/\r\n         *\r\n         * @param arr1\r\n         * @param arr2\r\n         * @returns {*}\r\n         */\r\n        arrayDiff: function (arr1, arr2) {\r\n            return array_diff(arr1, arr2);\r\n        },\r\n\r\n\r\n        dependentElement: function(validator, element, name) {\r\n\r\n            var el=validator.findByName(name);\r\n\r\n            if ( el[0]!==undefined  && validator.settings.onfocusout ) {\r\n                var event = 'blur';\r\n                if (el[0].tagName === 'SELECT' ||\r\n                    el[0].tagName === 'OPTION' ||\r\n                    el[0].type === 'checkbox' ||\r\n                    el[0].type === 'radio'\r\n                ) {\r\n                    event = 'click';\r\n                }\r\n\r\n                var ruleName = '.validate-laravelValidation';\r\n                el.off( ruleName )\r\n                    .off(event + ruleName + '-' + element.name)\r\n                    .on( event + ruleName + '-' + element.name, function() {\r\n                        $( element ).valid();\r\n                    });\r\n            }\r\n\r\n            return el[0];\r\n        }\r\n\r\n\r\n\r\n    }\r\n});","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Timezone Helper functions used by validators\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\n$.extend(true, laravelValidation, {\r\n\r\n    helpers: {\r\n\r\n        /**\r\n         * Check if the specified timezone is valid\r\n         *\r\n         * @param value\r\n         * @returns {boolean}\r\n         */\r\n        isTimezone: function (value) {\r\n\r\n            var timezones={\r\n                \"africa\": [\r\n                    \"abidjan\",\r\n                    \"accra\",\r\n                    \"addis_ababa\",\r\n                    \"algiers\",\r\n                    \"asmara\",\r\n                    \"bamako\",\r\n                    \"bangui\",\r\n                    \"banjul\",\r\n                    \"bissau\",\r\n                    \"blantyre\",\r\n                    \"brazzaville\",\r\n                    \"bujumbura\",\r\n                    \"cairo\",\r\n                    \"casablanca\",\r\n                    \"ceuta\",\r\n                    \"conakry\",\r\n                    \"dakar\",\r\n                    \"dar_es_salaam\",\r\n                    \"djibouti\",\r\n                    \"douala\",\r\n                    \"el_aaiun\",\r\n                    \"freetown\",\r\n                    \"gaborone\",\r\n                    \"harare\",\r\n                    \"johannesburg\",\r\n                    \"juba\",\r\n                    \"kampala\",\r\n                    \"khartoum\",\r\n                    \"kigali\",\r\n                    \"kinshasa\",\r\n                    \"lagos\",\r\n                    \"libreville\",\r\n                    \"lome\",\r\n                    \"luanda\",\r\n                    \"lubumbashi\",\r\n                    \"lusaka\",\r\n                    \"malabo\",\r\n                    \"maputo\",\r\n                    \"maseru\",\r\n                    \"mbabane\",\r\n                    \"mogadishu\",\r\n                    \"monrovia\",\r\n                    \"nairobi\",\r\n                    \"ndjamena\",\r\n                    \"niamey\",\r\n                    \"nouakchott\",\r\n                    \"ouagadougou\",\r\n                    \"porto-novo\",\r\n                    \"sao_tome\",\r\n                    \"tripoli\",\r\n                    \"tunis\",\r\n                    \"windhoek\"\r\n                ],\r\n                \"america\": [\r\n                    \"adak\",\r\n                    \"anchorage\",\r\n                    \"anguilla\",\r\n                    \"antigua\",\r\n                    \"araguaina\",\r\n                    \"argentina\\/buenos_aires\",\r\n                    \"argentina\\/catamarca\",\r\n                    \"argentina\\/cordoba\",\r\n                    \"argentina\\/jujuy\",\r\n                    \"argentina\\/la_rioja\",\r\n                    \"argentina\\/mendoza\",\r\n                    \"argentina\\/rio_gallegos\",\r\n                    \"argentina\\/salta\",\r\n                    \"argentina\\/san_juan\",\r\n                    \"argentina\\/san_luis\",\r\n                    \"argentina\\/tucuman\",\r\n                    \"argentina\\/ushuaia\",\r\n                    \"aruba\",\r\n                    \"asuncion\",\r\n                    \"atikokan\",\r\n                    \"bahia\",\r\n                    \"bahia_banderas\",\r\n                    \"barbados\",\r\n                    \"belem\",\r\n                    \"belize\",\r\n                    \"blanc-sablon\",\r\n                    \"boa_vista\",\r\n                    \"bogota\",\r\n                    \"boise\",\r\n                    \"cambridge_bay\",\r\n                    \"campo_grande\",\r\n                    \"cancun\",\r\n                    \"caracas\",\r\n                    \"cayenne\",\r\n                    \"cayman\",\r\n                    \"chicago\",\r\n                    \"chihuahua\",\r\n                    \"costa_rica\",\r\n                    \"creston\",\r\n                    \"cuiaba\",\r\n                    \"curacao\",\r\n                    \"danmarkshavn\",\r\n                    \"dawson\",\r\n                    \"dawson_creek\",\r\n                    \"denver\",\r\n                    \"detroit\",\r\n                    \"dominica\",\r\n                    \"edmonton\",\r\n                    \"eirunepe\",\r\n                    \"el_salvador\",\r\n                    \"fortaleza\",\r\n                    \"glace_bay\",\r\n                    \"godthab\",\r\n                    \"goose_bay\",\r\n                    \"grand_turk\",\r\n                    \"grenada\",\r\n                    \"guadeloupe\",\r\n                    \"guatemala\",\r\n                    \"guayaquil\",\r\n                    \"guyana\",\r\n                    \"halifax\",\r\n                    \"havana\",\r\n                    \"hermosillo\",\r\n                    \"indiana\\/indianapolis\",\r\n                    \"indiana\\/knox\",\r\n                    \"indiana\\/marengo\",\r\n                    \"indiana\\/petersburg\",\r\n                    \"indiana\\/tell_city\",\r\n                    \"indiana\\/vevay\",\r\n                    \"indiana\\/vincennes\",\r\n                    \"indiana\\/winamac\",\r\n                    \"inuvik\",\r\n                    \"iqaluit\",\r\n                    \"jamaica\",\r\n                    \"juneau\",\r\n                    \"kentucky\\/louisville\",\r\n                    \"kentucky\\/monticello\",\r\n                    \"kralendijk\",\r\n                    \"la_paz\",\r\n                    \"lima\",\r\n                    \"los_angeles\",\r\n                    \"lower_princes\",\r\n                    \"maceio\",\r\n                    \"managua\",\r\n                    \"manaus\",\r\n                    \"marigot\",\r\n                    \"martinique\",\r\n                    \"matamoros\",\r\n                    \"mazatlan\",\r\n                    \"menominee\",\r\n                    \"merida\",\r\n                    \"metlakatla\",\r\n                    \"mexico_city\",\r\n                    \"miquelon\",\r\n                    \"moncton\",\r\n                    \"monterrey\",\r\n                    \"montevideo\",\r\n                    \"montreal\",\r\n                    \"montserrat\",\r\n                    \"nassau\",\r\n                    \"new_york\",\r\n                    \"nipigon\",\r\n                    \"nome\",\r\n                    \"noronha\",\r\n                    \"north_dakota\\/beulah\",\r\n                    \"north_dakota\\/center\",\r\n                    \"north_dakota\\/new_salem\",\r\n                    \"ojinaga\",\r\n                    \"panama\",\r\n                    \"pangnirtung\",\r\n                    \"paramaribo\",\r\n                    \"phoenix\",\r\n                    \"port-au-prince\",\r\n                    \"port_of_spain\",\r\n                    \"porto_velho\",\r\n                    \"puerto_rico\",\r\n                    \"rainy_river\",\r\n                    \"rankin_inlet\",\r\n                    \"recife\",\r\n                    \"regina\",\r\n                    \"resolute\",\r\n                    \"rio_branco\",\r\n                    \"santa_isabel\",\r\n                    \"santarem\",\r\n                    \"santiago\",\r\n                    \"santo_domingo\",\r\n                    \"sao_paulo\",\r\n                    \"scoresbysund\",\r\n                    \"shiprock\",\r\n                    \"sitka\",\r\n                    \"st_barthelemy\",\r\n                    \"st_johns\",\r\n                    \"st_kitts\",\r\n                    \"st_lucia\",\r\n                    \"st_thomas\",\r\n                    \"st_vincent\",\r\n                    \"swift_current\",\r\n                    \"tegucigalpa\",\r\n                    \"thule\",\r\n                    \"thunder_bay\",\r\n                    \"tijuana\",\r\n                    \"toronto\",\r\n                    \"tortola\",\r\n                    \"vancouver\",\r\n                    \"whitehorse\",\r\n                    \"winnipeg\",\r\n                    \"yakutat\",\r\n                    \"yellowknife\"\r\n                ],\r\n                \"antarctica\": [\r\n                    \"casey\",\r\n                    \"davis\",\r\n                    \"dumontdurville\",\r\n                    \"macquarie\",\r\n                    \"mawson\",\r\n                    \"mcmurdo\",\r\n                    \"palmer\",\r\n                    \"rothera\",\r\n                    \"south_pole\",\r\n                    \"syowa\",\r\n                    \"vostok\"\r\n                ],\r\n                \"arctic\": [\r\n                    \"longyearbyen\"\r\n                ],\r\n                \"asia\": [\r\n                    \"aden\",\r\n                    \"almaty\",\r\n                    \"amman\",\r\n                    \"anadyr\",\r\n                    \"aqtau\",\r\n                    \"aqtobe\",\r\n                    \"ashgabat\",\r\n                    \"baghdad\",\r\n                    \"bahrain\",\r\n                    \"baku\",\r\n                    \"bangkok\",\r\n                    \"beirut\",\r\n                    \"bishkek\",\r\n                    \"brunei\",\r\n                    \"choibalsan\",\r\n                    \"chongqing\",\r\n                    \"colombo\",\r\n                    \"damascus\",\r\n                    \"dhaka\",\r\n                    \"dili\",\r\n                    \"dubai\",\r\n                    \"dushanbe\",\r\n                    \"gaza\",\r\n                    \"harbin\",\r\n                    \"hebron\",\r\n                    \"ho_chi_minh\",\r\n                    \"hong_kong\",\r\n                    \"hovd\",\r\n                    \"irkutsk\",\r\n                    \"jakarta\",\r\n                    \"jayapura\",\r\n                    \"jerusalem\",\r\n                    \"kabul\",\r\n                    \"kamchatka\",\r\n                    \"karachi\",\r\n                    \"kashgar\",\r\n                    \"kathmandu\",\r\n                    \"khandyga\",\r\n                    \"kolkata\",\r\n                    \"krasnoyarsk\",\r\n                    \"kuala_lumpur\",\r\n                    \"kuching\",\r\n                    \"kuwait\",\r\n                    \"macau\",\r\n                    \"magadan\",\r\n                    \"makassar\",\r\n                    \"manila\",\r\n                    \"muscat\",\r\n                    \"nicosia\",\r\n                    \"novokuznetsk\",\r\n                    \"novosibirsk\",\r\n                    \"omsk\",\r\n                    \"oral\",\r\n                    \"phnom_penh\",\r\n                    \"pontianak\",\r\n                    \"pyongyang\",\r\n                    \"qatar\",\r\n                    \"qyzylorda\",\r\n                    \"rangoon\",\r\n                    \"riyadh\",\r\n                    \"sakhalin\",\r\n                    \"samarkand\",\r\n                    \"seoul\",\r\n                    \"shanghai\",\r\n                    \"singapore\",\r\n                    \"taipei\",\r\n                    \"tashkent\",\r\n                    \"tbilisi\",\r\n                    \"tehran\",\r\n                    \"thimphu\",\r\n                    \"tokyo\",\r\n                    \"ulaanbaatar\",\r\n                    \"urumqi\",\r\n                    \"ust-nera\",\r\n                    \"vientiane\",\r\n                    \"vladivostok\",\r\n                    \"yakutsk\",\r\n                    \"yekaterinburg\",\r\n                    \"yerevan\"\r\n                ],\r\n                \"atlantic\": [\r\n                    \"azores\",\r\n                    \"bermuda\",\r\n                    \"canary\",\r\n                    \"cape_verde\",\r\n                    \"faroe\",\r\n                    \"madeira\",\r\n                    \"reykjavik\",\r\n                    \"south_georgia\",\r\n                    \"st_helena\",\r\n                    \"stanley\"\r\n                ],\r\n                \"australia\": [\r\n                    \"adelaide\",\r\n                    \"brisbane\",\r\n                    \"broken_hill\",\r\n                    \"currie\",\r\n                    \"darwin\",\r\n                    \"eucla\",\r\n                    \"hobart\",\r\n                    \"lindeman\",\r\n                    \"lord_howe\",\r\n                    \"melbourne\",\r\n                    \"perth\",\r\n                    \"sydney\"\r\n                ],\r\n                \"europe\": [\r\n                    \"amsterdam\",\r\n                    \"andorra\",\r\n                    \"athens\",\r\n                    \"belgrade\",\r\n                    \"berlin\",\r\n                    \"bratislava\",\r\n                    \"brussels\",\r\n                    \"bucharest\",\r\n                    \"budapest\",\r\n                    \"busingen\",\r\n                    \"chisinau\",\r\n                    \"copenhagen\",\r\n                    \"dublin\",\r\n                    \"gibraltar\",\r\n                    \"guernsey\",\r\n                    \"helsinki\",\r\n                    \"isle_of_man\",\r\n                    \"istanbul\",\r\n                    \"jersey\",\r\n                    \"kaliningrad\",\r\n                    \"kiev\",\r\n                    \"lisbon\",\r\n                    \"ljubljana\",\r\n                    \"london\",\r\n                    \"luxembourg\",\r\n                    \"madrid\",\r\n                    \"malta\",\r\n                    \"mariehamn\",\r\n                    \"minsk\",\r\n                    \"monaco\",\r\n                    \"moscow\",\r\n                    \"oslo\",\r\n                    \"paris\",\r\n                    \"podgorica\",\r\n                    \"prague\",\r\n                    \"riga\",\r\n                    \"rome\",\r\n                    \"samara\",\r\n                    \"san_marino\",\r\n                    \"sarajevo\",\r\n                    \"simferopol\",\r\n                    \"skopje\",\r\n                    \"sofia\",\r\n                    \"stockholm\",\r\n                    \"tallinn\",\r\n                    \"tirane\",\r\n                    \"uzhgorod\",\r\n                    \"vaduz\",\r\n                    \"vatican\",\r\n                    \"vienna\",\r\n                    \"vilnius\",\r\n                    \"volgograd\",\r\n                    \"warsaw\",\r\n                    \"zagreb\",\r\n                    \"zaporozhye\",\r\n                    \"zurich\"\r\n                ],\r\n                \"indian\": [\r\n                    \"antananarivo\",\r\n                    \"chagos\",\r\n                    \"christmas\",\r\n                    \"cocos\",\r\n                    \"comoro\",\r\n                    \"kerguelen\",\r\n                    \"mahe\",\r\n                    \"maldives\",\r\n                    \"mauritius\",\r\n                    \"mayotte\",\r\n                    \"reunion\"\r\n                ],\r\n                \"pacific\": [\r\n                    \"apia\",\r\n                    \"auckland\",\r\n                    \"chatham\",\r\n                    \"chuuk\",\r\n                    \"easter\",\r\n                    \"efate\",\r\n                    \"enderbury\",\r\n                    \"fakaofo\",\r\n                    \"fiji\",\r\n                    \"funafuti\",\r\n                    \"galapagos\",\r\n                    \"gambier\",\r\n                    \"guadalcanal\",\r\n                    \"guam\",\r\n                    \"honolulu\",\r\n                    \"johnston\",\r\n                    \"kiritimati\",\r\n                    \"kosrae\",\r\n                    \"kwajalein\",\r\n                    \"majuro\",\r\n                    \"marquesas\",\r\n                    \"midway\",\r\n                    \"nauru\",\r\n                    \"niue\",\r\n                    \"norfolk\",\r\n                    \"noumea\",\r\n                    \"pago_pago\",\r\n                    \"palau\",\r\n                    \"pitcairn\",\r\n                    \"pohnpei\",\r\n                    \"port_moresby\",\r\n                    \"rarotonga\",\r\n                    \"saipan\",\r\n                    \"tahiti\",\r\n                    \"tarawa\",\r\n                    \"tongatapu\",\r\n                    \"wake\",\r\n                    \"wallis\"\r\n                ],\r\n                \"utc\": [\r\n                    \"\"\r\n                ]\r\n            };\r\n\r\n            var tzparts= value.split('/',2);\r\n            var continent=tzparts[0].toLowerCase();\r\n            var city='';\r\n            if (tzparts[1]) {\r\n                city=tzparts[1].toLowerCase();\r\n            }\r\n\r\n            return (continent in timezones && ( timezones[continent].length===0 || timezones[continent].indexOf(city)!==-1))\r\n\r\n        }\r\n    }\r\n\r\n\r\n});","/*!\r\n * Laravel Javascript Validation\r\n *\r\n * https://github.com/proengsoft/laravel-jsvalidation\r\n *\r\n * Metjods that implement Laravel Validations\r\n *\r\n * Copyright (c) 2014 Proengsoft\r\n * Released under the MIT license\r\n */\r\n\r\n\r\n$.extend(true, laravelValidation, {\r\n\r\n    methods:{\r\n\r\n        helpers: laravelValidation.helpers,\r\n\r\n        jsRemoteTimer:0,\r\n\r\n\r\n        /**\r\n         * \"Validate\" optional attributes.\r\n         * Always returns true, just lets us put sometimes in rules.*\r\n         * @return {boolean}\r\n         */\r\n        Sometimes: function() {\r\n            return true;\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate the given attribute is filled if it is present.\r\n         */\r\n        Filled: function(value, element) {\r\n            return $.validator.methods.required.call(this, value, element, true);\r\n        },\r\n\r\n\r\n        /**\r\n         *Validate that a required attribute exists.\r\n         */\r\n        Required: function(value, element) {\r\n            return  $.validator.methods.required.call(this, value, element);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute exists when any other attribute exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWith: function(value, element, params) {\r\n            var validator=this,\r\n                required=false;\r\n            var currentObject=this;\r\n\r\n            $.each(params,function(i,param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required=required || (\r\n                    target!==undefined &&\r\n                    $.validator.methods.required.call(\r\n                        validator,\r\n                        currentObject.elementValue(target),\r\n                        target,true\r\n                    ));\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute exists when all other attribute exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWithAll: function(value, element, params) {\r\n            var validator=this,\r\n                required=true;\r\n            var currentObject=this;\r\n\r\n            $.each(params,function(i,param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required = required && (\r\n                      target!==undefined &&\r\n                      $.validator.methods.required.call(\r\n                          validator,\r\n                          currentObject.elementValue(target),\r\n                          target,true\r\n                      ));\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute exists when any other attribute does not exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWithout: function(value, element, params) {\r\n            var validator=this,\r\n                required=false;\r\n            var currentObject=this;\r\n\r\n            $.each(params,function(i,param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required = required ||\r\n                    target===undefined||\r\n                    !$.validator.methods.required.call(\r\n                        validator,\r\n                        currentObject.elementValue(target),\r\n                        target,true\r\n                    );\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute exists when all other attribute does not exists.\r\n         * @return {boolean}\r\n         */\r\n        RequiredWithoutAll: function(value, element, params) {\r\n            var validator=this,\r\n                required=true,\r\n                currentObject=this;\r\n\r\n            $.each(params,function(i, param) {\r\n                var target=laravelValidation.helpers.dependentElement(\r\n                    currentObject, element, param\r\n                );\r\n                required = required && (\r\n                    target===undefined ||\r\n                    !$.validator.methods.required.call(\r\n                        validator,\r\n                        currentObject.elementValue(target),\r\n                        target,true\r\n                    ));\r\n            });\r\n\r\n            if (required) {\r\n                return  $.validator.methods.required.call(this, value, element, true);\r\n            }\r\n            return true;\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute exists when another attribute has a given value.\r\n         * @return {boolean}\r\n         */\r\n        RequiredIf: function(value, element, params) {\r\n\r\n            var target=laravelValidation.helpers.dependentElement(\r\n                this, element, params[0]\r\n            );\r\n\r\n            if (target!==undefined) {\r\n                var val=String(this.elementValue(target));\r\n                var data=params.slice(1);\r\n                if ($.inArray(val,data)!== -1) {\r\n                    return $.validator.methods.required.call(\r\n                        this, value, element, true\r\n                    );\r\n                }\r\n            }\r\n\r\n            return true;\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute has a matching confirmation.\r\n         * @return {boolean}\r\n         */\r\n        Confirmed: function(value, element, params) {\r\n            return laravelValidation.methods.Same.call(this,value, element, params);\r\n        },\r\n\r\n        /**\r\n         * Validate that two attributes match.\r\n         * @return {boolean}\r\n         */\r\n        Same: function(value, element, params) {\r\n\r\n            var target=laravelValidation.helpers.dependentElement(\r\n                this, element, params[0]\r\n            );\r\n\r\n            if (target!==undefined) {\r\n                return String(value) === String(this.elementValue(target));\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is different from another attribute.\r\n         * @return {boolean}\r\n         */\r\n        Different: function(value, element, params) {\r\n            return ! laravelValidation.methods.Same.call(this,value, element, params);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute was \"accepted\".\r\n         * This validation rule implies the attribute is \"required\".\r\n         * @return {boolean}\r\n         */\r\n        Accepted: function(value) {\r\n            var regex = new RegExp(\"^(?:(yes|on|1|true))$\",'i');\r\n            return regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is an array.\r\n         */\r\n        Array: function(value) {\r\n            return $.isArray(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a boolean.\r\n         * @return {boolean}\r\n         */\r\n        Boolean: function(value) {\r\n            var regex= new RegExp(\"^(?:(true|false|1|0))$\",'i');\r\n            return  regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is an integer.\r\n         * @return {boolean}\r\n         */\r\n        Integer: function(value) {\r\n            var regex= new RegExp(\"^(?:-?\\\\d+)$\",'i');\r\n            return  regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is numeric.\r\n         */\r\n        Numeric: function(value, element) {\r\n            return $.validator.methods.number.call(this, value, element, true);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a string.\r\n         * @return {boolean}\r\n         */\r\n        String: function(value) {\r\n            return typeof value === 'string';\r\n        },\r\n\r\n        /**\r\n         * The field under validation must be numeric and must have an exact length of value.\r\n         */\r\n        Digits: function(value, element, params) {\r\n            return ($.validator.methods.number.call(this, value, element, true)\r\n                && value.length===parseInt(params));\r\n        },\r\n\r\n        /**\r\n         * The field under validation must have a length between the given min and max.\r\n         */\r\n        DigitsBetween: function(value, element, params) {\r\n            return ($.validator.methods.number.call(this, value, element, true)\r\n                && value.length>=parseFloat(params[0]) && value.length<=parseFloat(params[1]));\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute.\r\n         * @return {boolean}\r\n         */\r\n        Size: function(value, element, params) {\r\n            return laravelValidation.helpers.getSize(this, element,value) === parseFloat(params[0]);\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute is between a set of values.\r\n         * @return {boolean}\r\n         */\r\n        Between: function(value, element, params) {\r\n            return ( laravelValidation.helpers.getSize(this, element,value) >= parseFloat(params[0]) &&\r\n                laravelValidation.helpers.getSize(this,element,value) <= parseFloat(params[1]));\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute is greater than a minimum value.\r\n         * @return {boolean}\r\n         */\r\n        Min: function(value, element, params) {\r\n            return laravelValidation.helpers.getSize(this, element,value) >= parseFloat(params[0]);\r\n        },\r\n\r\n        /**\r\n         * Validate the size of an attribute is less than a maximum value.\r\n         * @return {boolean}\r\n         */\r\n        Max: function(value, element, params) {\r\n            return laravelValidation.helpers.getSize(this, element,value) <= parseFloat(params[0]);\r\n        },\r\n\r\n        /**\r\n         *  Validate an attribute is contained within a list of values.\r\n         * @return {boolean}\r\n         */\r\n        In: function(value, element, params) {\r\n            if ($.isArray(value) && laravelValidation.helpers.hasRules(element, \"Array\")) {\r\n                var diff = laravelValidation.helpers.arrayDiff(value, params);\r\n                return Object.keys(diff).length === 0;\r\n            }\r\n            return params.indexOf(value.toString()) !== -1;\r\n        },\r\n\r\n        /**\r\n         *  Validate an attribute is not contained within a list of values.\r\n         * @return {boolean}\r\n         */\r\n        NotIn: function(value, element, params) {\r\n            return params.indexOf(value.toString()) === -1;\r\n        },\r\n\r\n\r\n        /**\r\n         *  Validate that an attribute is a valid IP.\r\n         * @return {boolean}\r\n         */\r\n        Ip: function(value) {\r\n            return /^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$/i.test(value) ||\r\n                /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b)\\.){3}(\\b((25[0-5])|(1\\d{2})|(2[0-4]\\d)|(\\d{1,2}))\\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(value);\r\n        },\r\n\r\n        /**\r\n         *  Validate that an attribute is a valid e-mail address.\r\n         */\r\n        Email: function(value, element) {\r\n            return $.validator.methods.email.call(this, value, element, true);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a valid URL.\r\n         */\r\n        Url: function(value, element) {\r\n            return $.validator.methods.url.call(this, value, element, true);\r\n        },\r\n\r\n        /**\r\n         * Validate the MIME type of a file upload attribute is in a set of MIME types.\r\n         * @return {boolean}\r\n         */\r\n        Mimes: function(value, element, params) {\r\n            var lowerParams = $.map(params, String.toLowerCase);\r\n            return (!window.File || !window.FileReader || !window.FileList || !window.Blob) ||\r\n                lowerParams.indexOf(laravelValidation.helpers.fileinfo(element).extension.toLowerCase())!==-1;\r\n        },\r\n\r\n        /**\r\n         * Validate the MIME type of a file upload attribute is in a set of MIME types.\r\n         */\r\n        Image: function(value, element) {\r\n            return laravelValidation.methods.Mimes.call(this, value, element, ['jpg', 'png', 'gif', 'bmp', 'svg']);\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute contains only alphabetic characters.\r\n         * @return {boolean}\r\n         */\r\n        Alpha: function(value) {\r\n            if (typeof  value !== 'string') {\r\n                return false;\r\n            }\r\n\r\n            var regex = new RegExp(\"^(?:^[a-z\\u00E0-\\u00FC]+$)$\",'i');\r\n            return  regex.test(value);\r\n\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute contains only alpha-numeric characters.\r\n         * @return {boolean}\r\n         */\r\n        AlphaNum: function(value) {\r\n            if (typeof  value !== 'string') {\r\n                return false;\r\n            }\r\n            var regex = new RegExp(\"^(?:^[a-z0-9\\u00E0-\\u00FC]+$)$\",'i');\r\n            return regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute contains only alphabetic characters.\r\n         * @return {boolean}\r\n         */\r\n        AlphaDash: function(value) {\r\n            if (typeof  value !== 'string') {\r\n                return false;\r\n            }\r\n            var regex = new RegExp(\"^(?:^[a-z0-9\\u00E0-\\u00FC_-]+$)$\",'i');\r\n            return regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute passes a regular expression check.\r\n         * @return {boolean}\r\n         */\r\n        Regex: function(value, element, params) {\r\n            var invalidModifiers=['x','s','u','X','U','A'];\r\n            // Converting php regular expression\r\n            var phpReg= new RegExp('^(?:\\/)(.*\\\\\\/?[^\\/]*|[^\\/]*)(?:\\/)([gmixXsuUAJ]*)?$');\r\n            var matches=params[0].match(phpReg);\r\n            if (matches==null) {\r\n                return false;\r\n            }\r\n            // checking modifiers\r\n            var php_modifiers=[];\r\n            if (matches[2]!==undefined) {\r\n                php_modifiers=matches[2].split('');\r\n                for (var i=0; i<php_modifiers.length<i ;i++) {\r\n                    if (invalidModifiers.indexOf(php_modifiers[i])!==-1) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n            var regex = new RegExp(\"^(?:\"+matches[1]+\")$\",php_modifiers.join());\r\n            return   regex.test(value);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute is a valid date.\r\n         * @return {boolean}\r\n         */\r\n        Date: function(value) {\r\n            return (laravelValidation.helpers.strtotime(value)!==false);\r\n        },\r\n\r\n        /**\r\n         * Validate that an attribute matches a date format.\r\n         * @return {boolean}\r\n         */\r\n        DateFormat: function(value, element, params) {\r\n            return laravelValidation.helpers.parseTime(value,params[0])!==false;\r\n        },\r\n\r\n        /**\r\n         * Validate the date is before a given date.\r\n         * @return {boolean}\r\n         */\r\n        Before: function(value, element, params) {\r\n\r\n            var timeCompare=parseFloat(params);\r\n            if (isNaN(timeCompare)) {\r\n                var target=laravelValidation.helpers.dependentElement(this, element, params);\r\n                if (target===undefined) {\r\n                    return false;\r\n                }\r\n                timeCompare= laravelValidation.helpers.parseTime(this.elementValue(target), target);\r\n            }\r\n\r\n            var timeValue=laravelValidation.helpers.parseTime(value, element);\r\n            return  (timeValue !==false && timeValue < timeCompare);\r\n\r\n        },\r\n\r\n        /**\r\n         * Validate the date is after a given date.\r\n         * @return {boolean}\r\n         */\r\n        After: function(value, element, params) {\r\n            var timeCompare=parseFloat(params);\r\n            if (isNaN(timeCompare)) {\r\n                var target=laravelValidation.helpers.dependentElement(this, element, params);\r\n                if (target===undefined) {\r\n                    return false;\r\n                }\r\n                timeCompare= laravelValidation.helpers.parseTime(this.elementValue(target), target);\r\n            }\r\n\r\n            var timeValue=laravelValidation.helpers.parseTime(value, element);\r\n            return  (timeValue !==false && timeValue > timeCompare);\r\n\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate that an attribute is a valid date.\r\n         */\r\n        Timezone: function(value) {\r\n            return  laravelValidation.helpers.isTimezone(value);\r\n        },\r\n\r\n\r\n        /**\r\n         * Validate the attribute is a valid JSON string.\r\n         *\r\n         * @param  value\r\n         * @return bool\r\n         */\r\n        Json: function(value) {\r\n            var result = true;\r\n            try {\r\n                JSON.parse(value);\r\n            } catch (e) {\r\n                result = false;\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n    }\r\n    \r\n});\r\n\r\n"],"sourceRoot":"/source/"}